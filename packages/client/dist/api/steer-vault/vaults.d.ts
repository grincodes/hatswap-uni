import { type DecimalToString, type Prisma } from '@sushiswap/database';
import { type SteerVaultsApiSchema } from '../../pure/steer-vault/vaults/schema';
export declare function getSteerVaultsFromDB(args: typeof SteerVaultsApiSchema._output): Promise<DecimalToString<{
    id: string;
    address: string;
    chainId: number;
    token1: {
        symbol: string;
        id: string;
        address: string;
        name: string;
        decimals: number;
    };
    token0: {
        symbol: string;
        id: string;
        address: string;
        name: string;
        decimals: number;
    };
    reserve0: string;
    reserve1: string;
    feesUSD: Prisma.Decimal;
    apr: number;
    pool: {
        isIncentivized: boolean;
        hasEnabledSteerVault: boolean;
        liquidityUSD: Prisma.Decimal;
        id: string;
        address: string;
        chainId: number;
        name: string;
        incentives: {
            id: string;
            chainId: number;
            chefType: import("@sushiswap/database").$Enums.ChefType;
            apr: number;
            rewardPerDay: number;
            pid: number;
            rewarderAddress: string;
            rewarderType: import("@sushiswap/database").$Enums.RewarderType;
            rewardToken: {
                symbol: string;
                id: string;
                address: string;
                name: string;
                decimals: number;
            };
        }[];
        token1: {
            symbol: string;
            id: string;
            address: string;
            name: string;
            decimals: number;
        };
        token0: {
            symbol: string;
            id: string;
            address: string;
            name: string;
            decimals: number;
        };
        protocol: import("@sushiswap/database").$Enums.Protocol;
        swapFee: number;
        twapEnabled: boolean;
        totalSupply: string;
        volumeUSD: Prisma.Decimal;
        liquidityUSDChange1h: number;
        liquidityUSDChange1d: number;
        liquidityUSDChange1w: number;
        liquidityUSDChange1m: number;
        volume1h: Prisma.Decimal;
        volume1d: Prisma.Decimal;
        volume1w: Prisma.Decimal;
        volume1m: Prisma.Decimal;
        volumeChange1h: number;
        volumeChange1d: number;
        volumeChange1w: number;
        volumeChange1m: number;
        fees1h: Prisma.Decimal;
        fees1d: Prisma.Decimal;
        fees1w: Prisma.Decimal;
        fees1m: Prisma.Decimal;
        feesChange1h: number;
        feesChange1d: number;
        feesChange1w: number;
        feesChange1m: number;
        feeApr1h: number;
        feeApr1d: number;
        feeApr1w: number;
        feeApr1m: number;
        totalApr1h: number;
        totalApr1d: number;
        totalApr1w: number;
        totalApr1m: number;
        incentiveApr: number;
        wasIncentivized: boolean;
        hadEnabledSteerVault: boolean;
        isBlacklisted: boolean;
        steerVaults: {
            id: string;
            address: string;
            chainId: number;
            token1: {
                symbol: string;
                id: string;
                address: string;
                name: string;
                decimals: number;
            };
            token0: {
                symbol: string;
                id: string;
                address: string;
                name: string;
                decimals: number;
            };
            reserve0: string;
            reserve1: string;
            feesUSD: Prisma.Decimal;
            apr: number;
            feeTier: number;
            apr1w: number;
            apr1d: number;
            reserve0USD: Prisma.Decimal;
            fees0: string;
            fees0USD: Prisma.Decimal;
            reserve1USD: Prisma.Decimal;
            fees1: string;
            fees1USD: Prisma.Decimal;
            reserveUSD: Prisma.Decimal;
            strategy: import("@sushiswap/database").$Enums.SteerStrategy;
            payloadHash: string;
            performanceFee: number;
            lowerTick: number;
            upperTick: number;
            adjustmentFrequency: number;
            lastAdjustmentTimestamp: number;
            isEnabled: boolean;
            wasEnabled: boolean;
            isDeprecated: boolean;
            creator: string;
            admin: string;
            manager: string;
        }[];
    };
    feeTier: number;
    apr1w: number;
    apr1d: number;
    reserve0USD: Prisma.Decimal;
    fees0: string;
    fees0USD: Prisma.Decimal;
    reserve1USD: Prisma.Decimal;
    fees1: string;
    fees1USD: Prisma.Decimal;
    reserveUSD: Prisma.Decimal;
    strategy: import("@sushiswap/database").$Enums.SteerStrategy;
    payloadHash: string;
    performanceFee: number;
    lowerTick: number;
    upperTick: number;
    adjustmentFrequency: number;
    lastAdjustmentTimestamp: number;
    isEnabled: boolean;
    wasEnabled: boolean;
    isDeprecated: boolean;
    creator: string;
    admin: string;
    manager: string;
}>[]>;
//# sourceMappingURL=vaults.d.ts.map