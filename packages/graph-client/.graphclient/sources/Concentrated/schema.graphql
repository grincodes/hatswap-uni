schema {
  query: Query
  subscription: Subscription
}

"Marks the GraphQL type as indexable entity.  Each type that should be an entity is required to be annotated with this directive."
directive @entity on OBJECT

"Defined a Subgraph ID for an object type"
directive @subgraphId(id: String!) on OBJECT

"creates a virtual field on the entity that may be queried but cannot be set manually through the mappings API."
directive @derivedFrom(field: String!) on FIELD_DEFINITION

enum CONCENTRATED_Aggregation_interval {
  hour
  day
}

scalar CONCENTRATED_BigDecimal

scalar BigInt

input CONCENTRATED_BlockChangedFilter {
  number_gte: Int!
}

input CONCENTRATED_Block_height {
  hash: CONCENTRATED_Bytes
  number: Int
  number_gte: Int
}

type CONCENTRATED_Bundle {
  id: ID!
  ethPriceUSD: CONCENTRATED_BigDecimal!
}

input CONCENTRATED_Bundle_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  ethPriceUSD: CONCENTRATED_BigDecimal
  ethPriceUSD_not: CONCENTRATED_BigDecimal
  ethPriceUSD_gt: CONCENTRATED_BigDecimal
  ethPriceUSD_lt: CONCENTRATED_BigDecimal
  ethPriceUSD_gte: CONCENTRATED_BigDecimal
  ethPriceUSD_lte: CONCENTRATED_BigDecimal
  ethPriceUSD_in: [CONCENTRATED_BigDecimal!]
  ethPriceUSD_not_in: [CONCENTRATED_BigDecimal!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Bundle_filter]
  or: [CONCENTRATED_Bundle_filter]
}

enum CONCENTRATED_Bundle_orderBy {
  id
  ethPriceUSD
}

type CONCENTRATED_Burn {
  id: ID!
  transaction: CONCENTRATED_Transaction!
  pool: CONCENTRATED_Pool!
  token0: CONCENTRATED_Token!
  token1: CONCENTRATED_Token!
  timestamp: BigInt!
  owner: CONCENTRATED_Bytes
  origin: CONCENTRATED_Bytes!
  amount: BigInt!
  amount0: CONCENTRATED_BigDecimal!
  amount1: CONCENTRATED_BigDecimal!
  amountUSD: CONCENTRATED_BigDecimal
  tickLower: BigInt!
  tickUpper: BigInt!
  logIndex: BigInt
}

input CONCENTRATED_Burn_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  transaction: String
  transaction_not: String
  transaction_gt: String
  transaction_lt: String
  transaction_gte: String
  transaction_lte: String
  transaction_in: [String!]
  transaction_not_in: [String!]
  transaction_contains: String
  transaction_contains_nocase: String
  transaction_not_contains: String
  transaction_not_contains_nocase: String
  transaction_starts_with: String
  transaction_starts_with_nocase: String
  transaction_not_starts_with: String
  transaction_not_starts_with_nocase: String
  transaction_ends_with: String
  transaction_ends_with_nocase: String
  transaction_not_ends_with: String
  transaction_not_ends_with_nocase: String
  transaction_: CONCENTRATED_Transaction_filter
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  token0: String
  token0_not: String
  token0_gt: String
  token0_lt: String
  token0_gte: String
  token0_lte: String
  token0_in: [String!]
  token0_not_in: [String!]
  token0_contains: String
  token0_contains_nocase: String
  token0_not_contains: String
  token0_not_contains_nocase: String
  token0_starts_with: String
  token0_starts_with_nocase: String
  token0_not_starts_with: String
  token0_not_starts_with_nocase: String
  token0_ends_with: String
  token0_ends_with_nocase: String
  token0_not_ends_with: String
  token0_not_ends_with_nocase: String
  token0_: CONCENTRATED_Token_filter
  token1: String
  token1_not: String
  token1_gt: String
  token1_lt: String
  token1_gte: String
  token1_lte: String
  token1_in: [String!]
  token1_not_in: [String!]
  token1_contains: String
  token1_contains_nocase: String
  token1_not_contains: String
  token1_not_contains_nocase: String
  token1_starts_with: String
  token1_starts_with_nocase: String
  token1_not_starts_with: String
  token1_not_starts_with_nocase: String
  token1_ends_with: String
  token1_ends_with_nocase: String
  token1_not_ends_with: String
  token1_not_ends_with_nocase: String
  token1_: CONCENTRATED_Token_filter
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  owner: CONCENTRATED_Bytes
  owner_not: CONCENTRATED_Bytes
  owner_gt: CONCENTRATED_Bytes
  owner_lt: CONCENTRATED_Bytes
  owner_gte: CONCENTRATED_Bytes
  owner_lte: CONCENTRATED_Bytes
  owner_in: [CONCENTRATED_Bytes!]
  owner_not_in: [CONCENTRATED_Bytes!]
  owner_contains: CONCENTRATED_Bytes
  owner_not_contains: CONCENTRATED_Bytes
  origin: CONCENTRATED_Bytes
  origin_not: CONCENTRATED_Bytes
  origin_gt: CONCENTRATED_Bytes
  origin_lt: CONCENTRATED_Bytes
  origin_gte: CONCENTRATED_Bytes
  origin_lte: CONCENTRATED_Bytes
  origin_in: [CONCENTRATED_Bytes!]
  origin_not_in: [CONCENTRATED_Bytes!]
  origin_contains: CONCENTRATED_Bytes
  origin_not_contains: CONCENTRATED_Bytes
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amount0: CONCENTRATED_BigDecimal
  amount0_not: CONCENTRATED_BigDecimal
  amount0_gt: CONCENTRATED_BigDecimal
  amount0_lt: CONCENTRATED_BigDecimal
  amount0_gte: CONCENTRATED_BigDecimal
  amount0_lte: CONCENTRATED_BigDecimal
  amount0_in: [CONCENTRATED_BigDecimal!]
  amount0_not_in: [CONCENTRATED_BigDecimal!]
  amount1: CONCENTRATED_BigDecimal
  amount1_not: CONCENTRATED_BigDecimal
  amount1_gt: CONCENTRATED_BigDecimal
  amount1_lt: CONCENTRATED_BigDecimal
  amount1_gte: CONCENTRATED_BigDecimal
  amount1_lte: CONCENTRATED_BigDecimal
  amount1_in: [CONCENTRATED_BigDecimal!]
  amount1_not_in: [CONCENTRATED_BigDecimal!]
  amountUSD: CONCENTRATED_BigDecimal
  amountUSD_not: CONCENTRATED_BigDecimal
  amountUSD_gt: CONCENTRATED_BigDecimal
  amountUSD_lt: CONCENTRATED_BigDecimal
  amountUSD_gte: CONCENTRATED_BigDecimal
  amountUSD_lte: CONCENTRATED_BigDecimal
  amountUSD_in: [CONCENTRATED_BigDecimal!]
  amountUSD_not_in: [CONCENTRATED_BigDecimal!]
  tickLower: BigInt
  tickLower_not: BigInt
  tickLower_gt: BigInt
  tickLower_lt: BigInt
  tickLower_gte: BigInt
  tickLower_lte: BigInt
  tickLower_in: [BigInt!]
  tickLower_not_in: [BigInt!]
  tickUpper: BigInt
  tickUpper_not: BigInt
  tickUpper_gt: BigInt
  tickUpper_lt: BigInt
  tickUpper_gte: BigInt
  tickUpper_lte: BigInt
  tickUpper_in: [BigInt!]
  tickUpper_not_in: [BigInt!]
  logIndex: BigInt
  logIndex_not: BigInt
  logIndex_gt: BigInt
  logIndex_lt: BigInt
  logIndex_gte: BigInt
  logIndex_lte: BigInt
  logIndex_in: [BigInt!]
  logIndex_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Burn_filter]
  or: [CONCENTRATED_Burn_filter]
}

enum CONCENTRATED_Burn_orderBy {
  id
  transaction
  transaction__id
  transaction__blockNumber
  transaction__timestamp
  transaction__gasUsed
  transaction__gasPrice
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  token0
  token0__id
  token0__symbol
  token0__name
  token0__decimals
  token0__totalSupply
  token0__volume
  token0__volumeUSD
  token0__untrackedVolumeUSD
  token0__feesUSD
  token0__txCount
  token0__poolCount
  token0__totalValueLocked
  token0__totalValueLockedUSD
  token0__totalValueLockedUSDUntracked
  token0__derivedETH
  token1
  token1__id
  token1__symbol
  token1__name
  token1__decimals
  token1__totalSupply
  token1__volume
  token1__volumeUSD
  token1__untrackedVolumeUSD
  token1__feesUSD
  token1__txCount
  token1__poolCount
  token1__totalValueLocked
  token1__totalValueLockedUSD
  token1__totalValueLockedUSDUntracked
  token1__derivedETH
  timestamp
  owner
  origin
  amount
  amount0
  amount1
  amountUSD
  tickLower
  tickUpper
  logIndex
}

scalar CONCENTRATED_Bytes

type CONCENTRATED_Collect {
  id: ID!
  transaction: CONCENTRATED_Transaction!
  timestamp: BigInt!
  pool: CONCENTRATED_Pool!
  owner: CONCENTRATED_Bytes
  amount0: CONCENTRATED_BigDecimal!
  amount1: CONCENTRATED_BigDecimal!
  amountUSD: CONCENTRATED_BigDecimal
  tickLower: BigInt!
  tickUpper: BigInt!
  logIndex: BigInt
}

input CONCENTRATED_Collect_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  transaction: String
  transaction_not: String
  transaction_gt: String
  transaction_lt: String
  transaction_gte: String
  transaction_lte: String
  transaction_in: [String!]
  transaction_not_in: [String!]
  transaction_contains: String
  transaction_contains_nocase: String
  transaction_not_contains: String
  transaction_not_contains_nocase: String
  transaction_starts_with: String
  transaction_starts_with_nocase: String
  transaction_not_starts_with: String
  transaction_not_starts_with_nocase: String
  transaction_ends_with: String
  transaction_ends_with_nocase: String
  transaction_not_ends_with: String
  transaction_not_ends_with_nocase: String
  transaction_: CONCENTRATED_Transaction_filter
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  owner: CONCENTRATED_Bytes
  owner_not: CONCENTRATED_Bytes
  owner_gt: CONCENTRATED_Bytes
  owner_lt: CONCENTRATED_Bytes
  owner_gte: CONCENTRATED_Bytes
  owner_lte: CONCENTRATED_Bytes
  owner_in: [CONCENTRATED_Bytes!]
  owner_not_in: [CONCENTRATED_Bytes!]
  owner_contains: CONCENTRATED_Bytes
  owner_not_contains: CONCENTRATED_Bytes
  amount0: CONCENTRATED_BigDecimal
  amount0_not: CONCENTRATED_BigDecimal
  amount0_gt: CONCENTRATED_BigDecimal
  amount0_lt: CONCENTRATED_BigDecimal
  amount0_gte: CONCENTRATED_BigDecimal
  amount0_lte: CONCENTRATED_BigDecimal
  amount0_in: [CONCENTRATED_BigDecimal!]
  amount0_not_in: [CONCENTRATED_BigDecimal!]
  amount1: CONCENTRATED_BigDecimal
  amount1_not: CONCENTRATED_BigDecimal
  amount1_gt: CONCENTRATED_BigDecimal
  amount1_lt: CONCENTRATED_BigDecimal
  amount1_gte: CONCENTRATED_BigDecimal
  amount1_lte: CONCENTRATED_BigDecimal
  amount1_in: [CONCENTRATED_BigDecimal!]
  amount1_not_in: [CONCENTRATED_BigDecimal!]
  amountUSD: CONCENTRATED_BigDecimal
  amountUSD_not: CONCENTRATED_BigDecimal
  amountUSD_gt: CONCENTRATED_BigDecimal
  amountUSD_lt: CONCENTRATED_BigDecimal
  amountUSD_gte: CONCENTRATED_BigDecimal
  amountUSD_lte: CONCENTRATED_BigDecimal
  amountUSD_in: [CONCENTRATED_BigDecimal!]
  amountUSD_not_in: [CONCENTRATED_BigDecimal!]
  tickLower: BigInt
  tickLower_not: BigInt
  tickLower_gt: BigInt
  tickLower_lt: BigInt
  tickLower_gte: BigInt
  tickLower_lte: BigInt
  tickLower_in: [BigInt!]
  tickLower_not_in: [BigInt!]
  tickUpper: BigInt
  tickUpper_not: BigInt
  tickUpper_gt: BigInt
  tickUpper_lt: BigInt
  tickUpper_gte: BigInt
  tickUpper_lte: BigInt
  tickUpper_in: [BigInt!]
  tickUpper_not_in: [BigInt!]
  logIndex: BigInt
  logIndex_not: BigInt
  logIndex_gt: BigInt
  logIndex_lt: BigInt
  logIndex_gte: BigInt
  logIndex_lte: BigInt
  logIndex_in: [BigInt!]
  logIndex_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Collect_filter]
  or: [CONCENTRATED_Collect_filter]
}

enum CONCENTRATED_Collect_orderBy {
  id
  transaction
  transaction__id
  transaction__blockNumber
  transaction__timestamp
  transaction__gasUsed
  transaction__gasPrice
  timestamp
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  owner
  amount0
  amount1
  amountUSD
  tickLower
  tickUpper
  logIndex
}

type CONCENTRATED_Factory {
  id: ID!
  poolCount: BigInt!
  txCount: BigInt!
  totalVolumeUSD: CONCENTRATED_BigDecimal!
  totalVolumeETH: CONCENTRATED_BigDecimal!
  totalFeesUSD: CONCENTRATED_BigDecimal!
  totalFeesETH: CONCENTRATED_BigDecimal!
  untrackedVolumeUSD: CONCENTRATED_BigDecimal!
  totalValueLockedUSD: CONCENTRATED_BigDecimal!
  totalValueLockedETH: CONCENTRATED_BigDecimal!
  totalValueLockedUSDUntracked: CONCENTRATED_BigDecimal!
  totalValueLockedETHUntracked: CONCENTRATED_BigDecimal!
  owner: ID!
}

input CONCENTRATED_Factory_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  poolCount: BigInt
  poolCount_not: BigInt
  poolCount_gt: BigInt
  poolCount_lt: BigInt
  poolCount_gte: BigInt
  poolCount_lte: BigInt
  poolCount_in: [BigInt!]
  poolCount_not_in: [BigInt!]
  txCount: BigInt
  txCount_not: BigInt
  txCount_gt: BigInt
  txCount_lt: BigInt
  txCount_gte: BigInt
  txCount_lte: BigInt
  txCount_in: [BigInt!]
  txCount_not_in: [BigInt!]
  totalVolumeUSD: CONCENTRATED_BigDecimal
  totalVolumeUSD_not: CONCENTRATED_BigDecimal
  totalVolumeUSD_gt: CONCENTRATED_BigDecimal
  totalVolumeUSD_lt: CONCENTRATED_BigDecimal
  totalVolumeUSD_gte: CONCENTRATED_BigDecimal
  totalVolumeUSD_lte: CONCENTRATED_BigDecimal
  totalVolumeUSD_in: [CONCENTRATED_BigDecimal!]
  totalVolumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalVolumeETH: CONCENTRATED_BigDecimal
  totalVolumeETH_not: CONCENTRATED_BigDecimal
  totalVolumeETH_gt: CONCENTRATED_BigDecimal
  totalVolumeETH_lt: CONCENTRATED_BigDecimal
  totalVolumeETH_gte: CONCENTRATED_BigDecimal
  totalVolumeETH_lte: CONCENTRATED_BigDecimal
  totalVolumeETH_in: [CONCENTRATED_BigDecimal!]
  totalVolumeETH_not_in: [CONCENTRATED_BigDecimal!]
  totalFeesUSD: CONCENTRATED_BigDecimal
  totalFeesUSD_not: CONCENTRATED_BigDecimal
  totalFeesUSD_gt: CONCENTRATED_BigDecimal
  totalFeesUSD_lt: CONCENTRATED_BigDecimal
  totalFeesUSD_gte: CONCENTRATED_BigDecimal
  totalFeesUSD_lte: CONCENTRATED_BigDecimal
  totalFeesUSD_in: [CONCENTRATED_BigDecimal!]
  totalFeesUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalFeesETH: CONCENTRATED_BigDecimal
  totalFeesETH_not: CONCENTRATED_BigDecimal
  totalFeesETH_gt: CONCENTRATED_BigDecimal
  totalFeesETH_lt: CONCENTRATED_BigDecimal
  totalFeesETH_gte: CONCENTRATED_BigDecimal
  totalFeesETH_lte: CONCENTRATED_BigDecimal
  totalFeesETH_in: [CONCENTRATED_BigDecimal!]
  totalFeesETH_not_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_not: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD: CONCENTRATED_BigDecimal
  totalValueLockedUSD_not: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedETH: CONCENTRATED_BigDecimal
  totalValueLockedETH_not: CONCENTRATED_BigDecimal
  totalValueLockedETH_gt: CONCENTRATED_BigDecimal
  totalValueLockedETH_lt: CONCENTRATED_BigDecimal
  totalValueLockedETH_gte: CONCENTRATED_BigDecimal
  totalValueLockedETH_lte: CONCENTRATED_BigDecimal
  totalValueLockedETH_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedETH_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSDUntracked: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_not: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_gt: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_lt: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_gte: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_lte: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSDUntracked_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedETHUntracked: CONCENTRATED_BigDecimal
  totalValueLockedETHUntracked_not: CONCENTRATED_BigDecimal
  totalValueLockedETHUntracked_gt: CONCENTRATED_BigDecimal
  totalValueLockedETHUntracked_lt: CONCENTRATED_BigDecimal
  totalValueLockedETHUntracked_gte: CONCENTRATED_BigDecimal
  totalValueLockedETHUntracked_lte: CONCENTRATED_BigDecimal
  totalValueLockedETHUntracked_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedETHUntracked_not_in: [CONCENTRATED_BigDecimal!]
  owner: ID
  owner_not: ID
  owner_gt: ID
  owner_lt: ID
  owner_gte: ID
  owner_lte: ID
  owner_in: [ID!]
  owner_not_in: [ID!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Factory_filter]
  or: [CONCENTRATED_Factory_filter]
}

enum CONCENTRATED_Factory_orderBy {
  id
  poolCount
  txCount
  totalVolumeUSD
  totalVolumeETH
  totalFeesUSD
  totalFeesETH
  untrackedVolumeUSD
  totalValueLockedUSD
  totalValueLockedETH
  totalValueLockedUSDUntracked
  totalValueLockedETHUntracked
  owner
}

type CONCENTRATED_Flash {
  id: ID!
  transaction: CONCENTRATED_Transaction!
  timestamp: BigInt!
  pool: CONCENTRATED_Pool!
  sender: CONCENTRATED_Bytes!
  recipient: CONCENTRATED_Bytes!
  amount0: CONCENTRATED_BigDecimal!
  amount1: CONCENTRATED_BigDecimal!
  amountUSD: CONCENTRATED_BigDecimal!
  amount0Paid: CONCENTRATED_BigDecimal!
  amount1Paid: CONCENTRATED_BigDecimal!
  logIndex: BigInt
}

input CONCENTRATED_Flash_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  transaction: String
  transaction_not: String
  transaction_gt: String
  transaction_lt: String
  transaction_gte: String
  transaction_lte: String
  transaction_in: [String!]
  transaction_not_in: [String!]
  transaction_contains: String
  transaction_contains_nocase: String
  transaction_not_contains: String
  transaction_not_contains_nocase: String
  transaction_starts_with: String
  transaction_starts_with_nocase: String
  transaction_not_starts_with: String
  transaction_not_starts_with_nocase: String
  transaction_ends_with: String
  transaction_ends_with_nocase: String
  transaction_not_ends_with: String
  transaction_not_ends_with_nocase: String
  transaction_: CONCENTRATED_Transaction_filter
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  sender: CONCENTRATED_Bytes
  sender_not: CONCENTRATED_Bytes
  sender_gt: CONCENTRATED_Bytes
  sender_lt: CONCENTRATED_Bytes
  sender_gte: CONCENTRATED_Bytes
  sender_lte: CONCENTRATED_Bytes
  sender_in: [CONCENTRATED_Bytes!]
  sender_not_in: [CONCENTRATED_Bytes!]
  sender_contains: CONCENTRATED_Bytes
  sender_not_contains: CONCENTRATED_Bytes
  recipient: CONCENTRATED_Bytes
  recipient_not: CONCENTRATED_Bytes
  recipient_gt: CONCENTRATED_Bytes
  recipient_lt: CONCENTRATED_Bytes
  recipient_gte: CONCENTRATED_Bytes
  recipient_lte: CONCENTRATED_Bytes
  recipient_in: [CONCENTRATED_Bytes!]
  recipient_not_in: [CONCENTRATED_Bytes!]
  recipient_contains: CONCENTRATED_Bytes
  recipient_not_contains: CONCENTRATED_Bytes
  amount0: CONCENTRATED_BigDecimal
  amount0_not: CONCENTRATED_BigDecimal
  amount0_gt: CONCENTRATED_BigDecimal
  amount0_lt: CONCENTRATED_BigDecimal
  amount0_gte: CONCENTRATED_BigDecimal
  amount0_lte: CONCENTRATED_BigDecimal
  amount0_in: [CONCENTRATED_BigDecimal!]
  amount0_not_in: [CONCENTRATED_BigDecimal!]
  amount1: CONCENTRATED_BigDecimal
  amount1_not: CONCENTRATED_BigDecimal
  amount1_gt: CONCENTRATED_BigDecimal
  amount1_lt: CONCENTRATED_BigDecimal
  amount1_gte: CONCENTRATED_BigDecimal
  amount1_lte: CONCENTRATED_BigDecimal
  amount1_in: [CONCENTRATED_BigDecimal!]
  amount1_not_in: [CONCENTRATED_BigDecimal!]
  amountUSD: CONCENTRATED_BigDecimal
  amountUSD_not: CONCENTRATED_BigDecimal
  amountUSD_gt: CONCENTRATED_BigDecimal
  amountUSD_lt: CONCENTRATED_BigDecimal
  amountUSD_gte: CONCENTRATED_BigDecimal
  amountUSD_lte: CONCENTRATED_BigDecimal
  amountUSD_in: [CONCENTRATED_BigDecimal!]
  amountUSD_not_in: [CONCENTRATED_BigDecimal!]
  amount0Paid: CONCENTRATED_BigDecimal
  amount0Paid_not: CONCENTRATED_BigDecimal
  amount0Paid_gt: CONCENTRATED_BigDecimal
  amount0Paid_lt: CONCENTRATED_BigDecimal
  amount0Paid_gte: CONCENTRATED_BigDecimal
  amount0Paid_lte: CONCENTRATED_BigDecimal
  amount0Paid_in: [CONCENTRATED_BigDecimal!]
  amount0Paid_not_in: [CONCENTRATED_BigDecimal!]
  amount1Paid: CONCENTRATED_BigDecimal
  amount1Paid_not: CONCENTRATED_BigDecimal
  amount1Paid_gt: CONCENTRATED_BigDecimal
  amount1Paid_lt: CONCENTRATED_BigDecimal
  amount1Paid_gte: CONCENTRATED_BigDecimal
  amount1Paid_lte: CONCENTRATED_BigDecimal
  amount1Paid_in: [CONCENTRATED_BigDecimal!]
  amount1Paid_not_in: [CONCENTRATED_BigDecimal!]
  logIndex: BigInt
  logIndex_not: BigInt
  logIndex_gt: BigInt
  logIndex_lt: BigInt
  logIndex_gte: BigInt
  logIndex_lte: BigInt
  logIndex_in: [BigInt!]
  logIndex_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Flash_filter]
  or: [CONCENTRATED_Flash_filter]
}

enum CONCENTRATED_Flash_orderBy {
  id
  transaction
  transaction__id
  transaction__blockNumber
  transaction__timestamp
  transaction__gasUsed
  transaction__gasPrice
  timestamp
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  sender
  recipient
  amount0
  amount1
  amountUSD
  amount0Paid
  amount1Paid
  logIndex
}

"""
8 bytes signed integer

"""
scalar CONCENTRATED_Int8

type CONCENTRATED_Mint {
  id: ID!
  transaction: CONCENTRATED_Transaction!
  timestamp: BigInt!
  pool: CONCENTRATED_Pool!
  token0: CONCENTRATED_Token!
  token1: CONCENTRATED_Token!
  owner: CONCENTRATED_Bytes!
  sender: CONCENTRATED_Bytes
  origin: CONCENTRATED_Bytes!
  amount: BigInt!
  amount0: CONCENTRATED_BigDecimal!
  amount1: CONCENTRATED_BigDecimal!
  amountUSD: CONCENTRATED_BigDecimal
  tickLower: BigInt!
  tickUpper: BigInt!
  logIndex: BigInt
}

input CONCENTRATED_Mint_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  transaction: String
  transaction_not: String
  transaction_gt: String
  transaction_lt: String
  transaction_gte: String
  transaction_lte: String
  transaction_in: [String!]
  transaction_not_in: [String!]
  transaction_contains: String
  transaction_contains_nocase: String
  transaction_not_contains: String
  transaction_not_contains_nocase: String
  transaction_starts_with: String
  transaction_starts_with_nocase: String
  transaction_not_starts_with: String
  transaction_not_starts_with_nocase: String
  transaction_ends_with: String
  transaction_ends_with_nocase: String
  transaction_not_ends_with: String
  transaction_not_ends_with_nocase: String
  transaction_: CONCENTRATED_Transaction_filter
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  token0: String
  token0_not: String
  token0_gt: String
  token0_lt: String
  token0_gte: String
  token0_lte: String
  token0_in: [String!]
  token0_not_in: [String!]
  token0_contains: String
  token0_contains_nocase: String
  token0_not_contains: String
  token0_not_contains_nocase: String
  token0_starts_with: String
  token0_starts_with_nocase: String
  token0_not_starts_with: String
  token0_not_starts_with_nocase: String
  token0_ends_with: String
  token0_ends_with_nocase: String
  token0_not_ends_with: String
  token0_not_ends_with_nocase: String
  token0_: CONCENTRATED_Token_filter
  token1: String
  token1_not: String
  token1_gt: String
  token1_lt: String
  token1_gte: String
  token1_lte: String
  token1_in: [String!]
  token1_not_in: [String!]
  token1_contains: String
  token1_contains_nocase: String
  token1_not_contains: String
  token1_not_contains_nocase: String
  token1_starts_with: String
  token1_starts_with_nocase: String
  token1_not_starts_with: String
  token1_not_starts_with_nocase: String
  token1_ends_with: String
  token1_ends_with_nocase: String
  token1_not_ends_with: String
  token1_not_ends_with_nocase: String
  token1_: CONCENTRATED_Token_filter
  owner: CONCENTRATED_Bytes
  owner_not: CONCENTRATED_Bytes
  owner_gt: CONCENTRATED_Bytes
  owner_lt: CONCENTRATED_Bytes
  owner_gte: CONCENTRATED_Bytes
  owner_lte: CONCENTRATED_Bytes
  owner_in: [CONCENTRATED_Bytes!]
  owner_not_in: [CONCENTRATED_Bytes!]
  owner_contains: CONCENTRATED_Bytes
  owner_not_contains: CONCENTRATED_Bytes
  sender: CONCENTRATED_Bytes
  sender_not: CONCENTRATED_Bytes
  sender_gt: CONCENTRATED_Bytes
  sender_lt: CONCENTRATED_Bytes
  sender_gte: CONCENTRATED_Bytes
  sender_lte: CONCENTRATED_Bytes
  sender_in: [CONCENTRATED_Bytes!]
  sender_not_in: [CONCENTRATED_Bytes!]
  sender_contains: CONCENTRATED_Bytes
  sender_not_contains: CONCENTRATED_Bytes
  origin: CONCENTRATED_Bytes
  origin_not: CONCENTRATED_Bytes
  origin_gt: CONCENTRATED_Bytes
  origin_lt: CONCENTRATED_Bytes
  origin_gte: CONCENTRATED_Bytes
  origin_lte: CONCENTRATED_Bytes
  origin_in: [CONCENTRATED_Bytes!]
  origin_not_in: [CONCENTRATED_Bytes!]
  origin_contains: CONCENTRATED_Bytes
  origin_not_contains: CONCENTRATED_Bytes
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amount0: CONCENTRATED_BigDecimal
  amount0_not: CONCENTRATED_BigDecimal
  amount0_gt: CONCENTRATED_BigDecimal
  amount0_lt: CONCENTRATED_BigDecimal
  amount0_gte: CONCENTRATED_BigDecimal
  amount0_lte: CONCENTRATED_BigDecimal
  amount0_in: [CONCENTRATED_BigDecimal!]
  amount0_not_in: [CONCENTRATED_BigDecimal!]
  amount1: CONCENTRATED_BigDecimal
  amount1_not: CONCENTRATED_BigDecimal
  amount1_gt: CONCENTRATED_BigDecimal
  amount1_lt: CONCENTRATED_BigDecimal
  amount1_gte: CONCENTRATED_BigDecimal
  amount1_lte: CONCENTRATED_BigDecimal
  amount1_in: [CONCENTRATED_BigDecimal!]
  amount1_not_in: [CONCENTRATED_BigDecimal!]
  amountUSD: CONCENTRATED_BigDecimal
  amountUSD_not: CONCENTRATED_BigDecimal
  amountUSD_gt: CONCENTRATED_BigDecimal
  amountUSD_lt: CONCENTRATED_BigDecimal
  amountUSD_gte: CONCENTRATED_BigDecimal
  amountUSD_lte: CONCENTRATED_BigDecimal
  amountUSD_in: [CONCENTRATED_BigDecimal!]
  amountUSD_not_in: [CONCENTRATED_BigDecimal!]
  tickLower: BigInt
  tickLower_not: BigInt
  tickLower_gt: BigInt
  tickLower_lt: BigInt
  tickLower_gte: BigInt
  tickLower_lte: BigInt
  tickLower_in: [BigInt!]
  tickLower_not_in: [BigInt!]
  tickUpper: BigInt
  tickUpper_not: BigInt
  tickUpper_gt: BigInt
  tickUpper_lt: BigInt
  tickUpper_gte: BigInt
  tickUpper_lte: BigInt
  tickUpper_in: [BigInt!]
  tickUpper_not_in: [BigInt!]
  logIndex: BigInt
  logIndex_not: BigInt
  logIndex_gt: BigInt
  logIndex_lt: BigInt
  logIndex_gte: BigInt
  logIndex_lte: BigInt
  logIndex_in: [BigInt!]
  logIndex_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Mint_filter]
  or: [CONCENTRATED_Mint_filter]
}

enum CONCENTRATED_Mint_orderBy {
  id
  transaction
  transaction__id
  transaction__blockNumber
  transaction__timestamp
  transaction__gasUsed
  transaction__gasPrice
  timestamp
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  token0
  token0__id
  token0__symbol
  token0__name
  token0__decimals
  token0__totalSupply
  token0__volume
  token0__volumeUSD
  token0__untrackedVolumeUSD
  token0__feesUSD
  token0__txCount
  token0__poolCount
  token0__totalValueLocked
  token0__totalValueLockedUSD
  token0__totalValueLockedUSDUntracked
  token0__derivedETH
  token1
  token1__id
  token1__symbol
  token1__name
  token1__decimals
  token1__totalSupply
  token1__volume
  token1__volumeUSD
  token1__untrackedVolumeUSD
  token1__feesUSD
  token1__txCount
  token1__poolCount
  token1__totalValueLocked
  token1__totalValueLockedUSD
  token1__totalValueLockedUSDUntracked
  token1__derivedETH
  owner
  sender
  origin
  amount
  amount0
  amount1
  amountUSD
  tickLower
  tickUpper
  logIndex
}

"""Defines the order direction, either ascending or descending"""
enum CONCENTRATED_OrderDirection {
  asc
  desc
}

type CONCENTRATED_Pool {
  id: ID!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  token0: CONCENTRATED_Token!
  token1: CONCENTRATED_Token!
  feeTier: BigInt!
  liquidity: BigInt!
  sqrtPrice: BigInt!
  feeGrowthGlobal0X128: BigInt!
  feeGrowthGlobal1X128: BigInt!
  token0Price: CONCENTRATED_BigDecimal!
  token1Price: CONCENTRATED_BigDecimal!
  tick: BigInt
  observationIndex: BigInt!
  volumeToken0: CONCENTRATED_BigDecimal!
  volumeToken1: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  untrackedVolumeUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  txCount: BigInt!
  collectedFeesToken0: CONCENTRATED_BigDecimal!
  collectedFeesToken1: CONCENTRATED_BigDecimal!
  collectedFeesUSD: CONCENTRATED_BigDecimal!
  totalValueLockedToken0: CONCENTRATED_BigDecimal!
  totalValueLockedToken1: CONCENTRATED_BigDecimal!
  totalValueLockedETH: CONCENTRATED_BigDecimal!
  totalValueLockedUSD: CONCENTRATED_BigDecimal!
  totalValueLockedUSDUntracked: CONCENTRATED_BigDecimal!
  liquidityProviderCount: BigInt!
  poolHourData(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_PoolHourData_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_PoolHourData_filter): [CONCENTRATED_PoolHourData!]!
  poolDayData(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_PoolDayData_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_PoolDayData_filter): [CONCENTRATED_PoolDayData!]!
  mints(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Mint_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Mint_filter): [CONCENTRATED_Mint!]!
  burns(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Burn_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Burn_filter): [CONCENTRATED_Burn!]!
  swaps(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Swap_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Swap_filter): [CONCENTRATED_Swap!]!
  collects(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Collect_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Collect_filter): [CONCENTRATED_Collect!]!
  ticks(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Tick_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Tick_filter): [CONCENTRATED_Tick!]!
}

type CONCENTRATED_PoolDayData {
  id: ID!
  date: Int!
  pool: CONCENTRATED_Pool!
  liquidity: BigInt!
  sqrtPrice: BigInt!
  token0Price: CONCENTRATED_BigDecimal!
  token1Price: CONCENTRATED_BigDecimal!
  tick: BigInt
  feeGrowthGlobal0X128: BigInt!
  feeGrowthGlobal1X128: BigInt!
  tvlUSD: CONCENTRATED_BigDecimal!
  volumeToken0: CONCENTRATED_BigDecimal!
  volumeToken1: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  txCount: BigInt!
  open: CONCENTRATED_BigDecimal!
  high: CONCENTRATED_BigDecimal!
  low: CONCENTRATED_BigDecimal!
  close: CONCENTRATED_BigDecimal!
}

input CONCENTRATED_PoolDayData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  date: Int
  date_not: Int
  date_gt: Int
  date_lt: Int
  date_gte: Int
  date_lte: Int
  date_in: [Int!]
  date_not_in: [Int!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  liquidity: BigInt
  liquidity_not: BigInt
  liquidity_gt: BigInt
  liquidity_lt: BigInt
  liquidity_gte: BigInt
  liquidity_lte: BigInt
  liquidity_in: [BigInt!]
  liquidity_not_in: [BigInt!]
  sqrtPrice: BigInt
  sqrtPrice_not: BigInt
  sqrtPrice_gt: BigInt
  sqrtPrice_lt: BigInt
  sqrtPrice_gte: BigInt
  sqrtPrice_lte: BigInt
  sqrtPrice_in: [BigInt!]
  sqrtPrice_not_in: [BigInt!]
  token0Price: CONCENTRATED_BigDecimal
  token0Price_not: CONCENTRATED_BigDecimal
  token0Price_gt: CONCENTRATED_BigDecimal
  token0Price_lt: CONCENTRATED_BigDecimal
  token0Price_gte: CONCENTRATED_BigDecimal
  token0Price_lte: CONCENTRATED_BigDecimal
  token0Price_in: [CONCENTRATED_BigDecimal!]
  token0Price_not_in: [CONCENTRATED_BigDecimal!]
  token1Price: CONCENTRATED_BigDecimal
  token1Price_not: CONCENTRATED_BigDecimal
  token1Price_gt: CONCENTRATED_BigDecimal
  token1Price_lt: CONCENTRATED_BigDecimal
  token1Price_gte: CONCENTRATED_BigDecimal
  token1Price_lte: CONCENTRATED_BigDecimal
  token1Price_in: [CONCENTRATED_BigDecimal!]
  token1Price_not_in: [CONCENTRATED_BigDecimal!]
  tick: BigInt
  tick_not: BigInt
  tick_gt: BigInt
  tick_lt: BigInt
  tick_gte: BigInt
  tick_lte: BigInt
  tick_in: [BigInt!]
  tick_not_in: [BigInt!]
  feeGrowthGlobal0X128: BigInt
  feeGrowthGlobal0X128_not: BigInt
  feeGrowthGlobal0X128_gt: BigInt
  feeGrowthGlobal0X128_lt: BigInt
  feeGrowthGlobal0X128_gte: BigInt
  feeGrowthGlobal0X128_lte: BigInt
  feeGrowthGlobal0X128_in: [BigInt!]
  feeGrowthGlobal0X128_not_in: [BigInt!]
  feeGrowthGlobal1X128: BigInt
  feeGrowthGlobal1X128_not: BigInt
  feeGrowthGlobal1X128_gt: BigInt
  feeGrowthGlobal1X128_lt: BigInt
  feeGrowthGlobal1X128_gte: BigInt
  feeGrowthGlobal1X128_lte: BigInt
  feeGrowthGlobal1X128_in: [BigInt!]
  feeGrowthGlobal1X128_not_in: [BigInt!]
  tvlUSD: CONCENTRATED_BigDecimal
  tvlUSD_not: CONCENTRATED_BigDecimal
  tvlUSD_gt: CONCENTRATED_BigDecimal
  tvlUSD_lt: CONCENTRATED_BigDecimal
  tvlUSD_gte: CONCENTRATED_BigDecimal
  tvlUSD_lte: CONCENTRATED_BigDecimal
  tvlUSD_in: [CONCENTRATED_BigDecimal!]
  tvlUSD_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken0: CONCENTRATED_BigDecimal
  volumeToken0_not: CONCENTRATED_BigDecimal
  volumeToken0_gt: CONCENTRATED_BigDecimal
  volumeToken0_lt: CONCENTRATED_BigDecimal
  volumeToken0_gte: CONCENTRATED_BigDecimal
  volumeToken0_lte: CONCENTRATED_BigDecimal
  volumeToken0_in: [CONCENTRATED_BigDecimal!]
  volumeToken0_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken1: CONCENTRATED_BigDecimal
  volumeToken1_not: CONCENTRATED_BigDecimal
  volumeToken1_gt: CONCENTRATED_BigDecimal
  volumeToken1_lt: CONCENTRATED_BigDecimal
  volumeToken1_gte: CONCENTRATED_BigDecimal
  volumeToken1_lte: CONCENTRATED_BigDecimal
  volumeToken1_in: [CONCENTRATED_BigDecimal!]
  volumeToken1_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  txCount: BigInt
  txCount_not: BigInt
  txCount_gt: BigInt
  txCount_lt: BigInt
  txCount_gte: BigInt
  txCount_lte: BigInt
  txCount_in: [BigInt!]
  txCount_not_in: [BigInt!]
  open: CONCENTRATED_BigDecimal
  open_not: CONCENTRATED_BigDecimal
  open_gt: CONCENTRATED_BigDecimal
  open_lt: CONCENTRATED_BigDecimal
  open_gte: CONCENTRATED_BigDecimal
  open_lte: CONCENTRATED_BigDecimal
  open_in: [CONCENTRATED_BigDecimal!]
  open_not_in: [CONCENTRATED_BigDecimal!]
  high: CONCENTRATED_BigDecimal
  high_not: CONCENTRATED_BigDecimal
  high_gt: CONCENTRATED_BigDecimal
  high_lt: CONCENTRATED_BigDecimal
  high_gte: CONCENTRATED_BigDecimal
  high_lte: CONCENTRATED_BigDecimal
  high_in: [CONCENTRATED_BigDecimal!]
  high_not_in: [CONCENTRATED_BigDecimal!]
  low: CONCENTRATED_BigDecimal
  low_not: CONCENTRATED_BigDecimal
  low_gt: CONCENTRATED_BigDecimal
  low_lt: CONCENTRATED_BigDecimal
  low_gte: CONCENTRATED_BigDecimal
  low_lte: CONCENTRATED_BigDecimal
  low_in: [CONCENTRATED_BigDecimal!]
  low_not_in: [CONCENTRATED_BigDecimal!]
  close: CONCENTRATED_BigDecimal
  close_not: CONCENTRATED_BigDecimal
  close_gt: CONCENTRATED_BigDecimal
  close_lt: CONCENTRATED_BigDecimal
  close_gte: CONCENTRATED_BigDecimal
  close_lte: CONCENTRATED_BigDecimal
  close_in: [CONCENTRATED_BigDecimal!]
  close_not_in: [CONCENTRATED_BigDecimal!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_PoolDayData_filter]
  or: [CONCENTRATED_PoolDayData_filter]
}

enum CONCENTRATED_PoolDayData_orderBy {
  id
  date
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  liquidity
  sqrtPrice
  token0Price
  token1Price
  tick
  feeGrowthGlobal0X128
  feeGrowthGlobal1X128
  tvlUSD
  volumeToken0
  volumeToken1
  volumeUSD
  feesUSD
  txCount
  open
  high
  low
  close
}

type CONCENTRATED_PoolHourData {
  id: ID!
  periodStartUnix: Int!
  pool: CONCENTRATED_Pool!
  liquidity: BigInt!
  sqrtPrice: BigInt!
  token0Price: CONCENTRATED_BigDecimal!
  token1Price: CONCENTRATED_BigDecimal!
  tick: BigInt
  feeGrowthGlobal0X128: BigInt!
  feeGrowthGlobal1X128: BigInt!
  tvlUSD: CONCENTRATED_BigDecimal!
  volumeToken0: CONCENTRATED_BigDecimal!
  volumeToken1: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  txCount: BigInt!
  open: CONCENTRATED_BigDecimal!
  high: CONCENTRATED_BigDecimal!
  low: CONCENTRATED_BigDecimal!
  close: CONCENTRATED_BigDecimal!
}

input CONCENTRATED_PoolHourData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  periodStartUnix: Int
  periodStartUnix_not: Int
  periodStartUnix_gt: Int
  periodStartUnix_lt: Int
  periodStartUnix_gte: Int
  periodStartUnix_lte: Int
  periodStartUnix_in: [Int!]
  periodStartUnix_not_in: [Int!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  liquidity: BigInt
  liquidity_not: BigInt
  liquidity_gt: BigInt
  liquidity_lt: BigInt
  liquidity_gte: BigInt
  liquidity_lte: BigInt
  liquidity_in: [BigInt!]
  liquidity_not_in: [BigInt!]
  sqrtPrice: BigInt
  sqrtPrice_not: BigInt
  sqrtPrice_gt: BigInt
  sqrtPrice_lt: BigInt
  sqrtPrice_gte: BigInt
  sqrtPrice_lte: BigInt
  sqrtPrice_in: [BigInt!]
  sqrtPrice_not_in: [BigInt!]
  token0Price: CONCENTRATED_BigDecimal
  token0Price_not: CONCENTRATED_BigDecimal
  token0Price_gt: CONCENTRATED_BigDecimal
  token0Price_lt: CONCENTRATED_BigDecimal
  token0Price_gte: CONCENTRATED_BigDecimal
  token0Price_lte: CONCENTRATED_BigDecimal
  token0Price_in: [CONCENTRATED_BigDecimal!]
  token0Price_not_in: [CONCENTRATED_BigDecimal!]
  token1Price: CONCENTRATED_BigDecimal
  token1Price_not: CONCENTRATED_BigDecimal
  token1Price_gt: CONCENTRATED_BigDecimal
  token1Price_lt: CONCENTRATED_BigDecimal
  token1Price_gte: CONCENTRATED_BigDecimal
  token1Price_lte: CONCENTRATED_BigDecimal
  token1Price_in: [CONCENTRATED_BigDecimal!]
  token1Price_not_in: [CONCENTRATED_BigDecimal!]
  tick: BigInt
  tick_not: BigInt
  tick_gt: BigInt
  tick_lt: BigInt
  tick_gte: BigInt
  tick_lte: BigInt
  tick_in: [BigInt!]
  tick_not_in: [BigInt!]
  feeGrowthGlobal0X128: BigInt
  feeGrowthGlobal0X128_not: BigInt
  feeGrowthGlobal0X128_gt: BigInt
  feeGrowthGlobal0X128_lt: BigInt
  feeGrowthGlobal0X128_gte: BigInt
  feeGrowthGlobal0X128_lte: BigInt
  feeGrowthGlobal0X128_in: [BigInt!]
  feeGrowthGlobal0X128_not_in: [BigInt!]
  feeGrowthGlobal1X128: BigInt
  feeGrowthGlobal1X128_not: BigInt
  feeGrowthGlobal1X128_gt: BigInt
  feeGrowthGlobal1X128_lt: BigInt
  feeGrowthGlobal1X128_gte: BigInt
  feeGrowthGlobal1X128_lte: BigInt
  feeGrowthGlobal1X128_in: [BigInt!]
  feeGrowthGlobal1X128_not_in: [BigInt!]
  tvlUSD: CONCENTRATED_BigDecimal
  tvlUSD_not: CONCENTRATED_BigDecimal
  tvlUSD_gt: CONCENTRATED_BigDecimal
  tvlUSD_lt: CONCENTRATED_BigDecimal
  tvlUSD_gte: CONCENTRATED_BigDecimal
  tvlUSD_lte: CONCENTRATED_BigDecimal
  tvlUSD_in: [CONCENTRATED_BigDecimal!]
  tvlUSD_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken0: CONCENTRATED_BigDecimal
  volumeToken0_not: CONCENTRATED_BigDecimal
  volumeToken0_gt: CONCENTRATED_BigDecimal
  volumeToken0_lt: CONCENTRATED_BigDecimal
  volumeToken0_gte: CONCENTRATED_BigDecimal
  volumeToken0_lte: CONCENTRATED_BigDecimal
  volumeToken0_in: [CONCENTRATED_BigDecimal!]
  volumeToken0_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken1: CONCENTRATED_BigDecimal
  volumeToken1_not: CONCENTRATED_BigDecimal
  volumeToken1_gt: CONCENTRATED_BigDecimal
  volumeToken1_lt: CONCENTRATED_BigDecimal
  volumeToken1_gte: CONCENTRATED_BigDecimal
  volumeToken1_lte: CONCENTRATED_BigDecimal
  volumeToken1_in: [CONCENTRATED_BigDecimal!]
  volumeToken1_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  txCount: BigInt
  txCount_not: BigInt
  txCount_gt: BigInt
  txCount_lt: BigInt
  txCount_gte: BigInt
  txCount_lte: BigInt
  txCount_in: [BigInt!]
  txCount_not_in: [BigInt!]
  open: CONCENTRATED_BigDecimal
  open_not: CONCENTRATED_BigDecimal
  open_gt: CONCENTRATED_BigDecimal
  open_lt: CONCENTRATED_BigDecimal
  open_gte: CONCENTRATED_BigDecimal
  open_lte: CONCENTRATED_BigDecimal
  open_in: [CONCENTRATED_BigDecimal!]
  open_not_in: [CONCENTRATED_BigDecimal!]
  high: CONCENTRATED_BigDecimal
  high_not: CONCENTRATED_BigDecimal
  high_gt: CONCENTRATED_BigDecimal
  high_lt: CONCENTRATED_BigDecimal
  high_gte: CONCENTRATED_BigDecimal
  high_lte: CONCENTRATED_BigDecimal
  high_in: [CONCENTRATED_BigDecimal!]
  high_not_in: [CONCENTRATED_BigDecimal!]
  low: CONCENTRATED_BigDecimal
  low_not: CONCENTRATED_BigDecimal
  low_gt: CONCENTRATED_BigDecimal
  low_lt: CONCENTRATED_BigDecimal
  low_gte: CONCENTRATED_BigDecimal
  low_lte: CONCENTRATED_BigDecimal
  low_in: [CONCENTRATED_BigDecimal!]
  low_not_in: [CONCENTRATED_BigDecimal!]
  close: CONCENTRATED_BigDecimal
  close_not: CONCENTRATED_BigDecimal
  close_gt: CONCENTRATED_BigDecimal
  close_lt: CONCENTRATED_BigDecimal
  close_gte: CONCENTRATED_BigDecimal
  close_lte: CONCENTRATED_BigDecimal
  close_in: [CONCENTRATED_BigDecimal!]
  close_not_in: [CONCENTRATED_BigDecimal!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_PoolHourData_filter]
  or: [CONCENTRATED_PoolHourData_filter]
}

enum CONCENTRATED_PoolHourData_orderBy {
  id
  periodStartUnix
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  liquidity
  sqrtPrice
  token0Price
  token1Price
  tick
  feeGrowthGlobal0X128
  feeGrowthGlobal1X128
  tvlUSD
  volumeToken0
  volumeToken1
  volumeUSD
  feesUSD
  txCount
  open
  high
  low
  close
}

input CONCENTRATED_Pool_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  createdAtTimestamp: BigInt
  createdAtTimestamp_not: BigInt
  createdAtTimestamp_gt: BigInt
  createdAtTimestamp_lt: BigInt
  createdAtTimestamp_gte: BigInt
  createdAtTimestamp_lte: BigInt
  createdAtTimestamp_in: [BigInt!]
  createdAtTimestamp_not_in: [BigInt!]
  createdAtBlockNumber: BigInt
  createdAtBlockNumber_not: BigInt
  createdAtBlockNumber_gt: BigInt
  createdAtBlockNumber_lt: BigInt
  createdAtBlockNumber_gte: BigInt
  createdAtBlockNumber_lte: BigInt
  createdAtBlockNumber_in: [BigInt!]
  createdAtBlockNumber_not_in: [BigInt!]
  token0: String
  token0_not: String
  token0_gt: String
  token0_lt: String
  token0_gte: String
  token0_lte: String
  token0_in: [String!]
  token0_not_in: [String!]
  token0_contains: String
  token0_contains_nocase: String
  token0_not_contains: String
  token0_not_contains_nocase: String
  token0_starts_with: String
  token0_starts_with_nocase: String
  token0_not_starts_with: String
  token0_not_starts_with_nocase: String
  token0_ends_with: String
  token0_ends_with_nocase: String
  token0_not_ends_with: String
  token0_not_ends_with_nocase: String
  token0_: CONCENTRATED_Token_filter
  token1: String
  token1_not: String
  token1_gt: String
  token1_lt: String
  token1_gte: String
  token1_lte: String
  token1_in: [String!]
  token1_not_in: [String!]
  token1_contains: String
  token1_contains_nocase: String
  token1_not_contains: String
  token1_not_contains_nocase: String
  token1_starts_with: String
  token1_starts_with_nocase: String
  token1_not_starts_with: String
  token1_not_starts_with_nocase: String
  token1_ends_with: String
  token1_ends_with_nocase: String
  token1_not_ends_with: String
  token1_not_ends_with_nocase: String
  token1_: CONCENTRATED_Token_filter
  feeTier: BigInt
  feeTier_not: BigInt
  feeTier_gt: BigInt
  feeTier_lt: BigInt
  feeTier_gte: BigInt
  feeTier_lte: BigInt
  feeTier_in: [BigInt!]
  feeTier_not_in: [BigInt!]
  liquidity: BigInt
  liquidity_not: BigInt
  liquidity_gt: BigInt
  liquidity_lt: BigInt
  liquidity_gte: BigInt
  liquidity_lte: BigInt
  liquidity_in: [BigInt!]
  liquidity_not_in: [BigInt!]
  sqrtPrice: BigInt
  sqrtPrice_not: BigInt
  sqrtPrice_gt: BigInt
  sqrtPrice_lt: BigInt
  sqrtPrice_gte: BigInt
  sqrtPrice_lte: BigInt
  sqrtPrice_in: [BigInt!]
  sqrtPrice_not_in: [BigInt!]
  feeGrowthGlobal0X128: BigInt
  feeGrowthGlobal0X128_not: BigInt
  feeGrowthGlobal0X128_gt: BigInt
  feeGrowthGlobal0X128_lt: BigInt
  feeGrowthGlobal0X128_gte: BigInt
  feeGrowthGlobal0X128_lte: BigInt
  feeGrowthGlobal0X128_in: [BigInt!]
  feeGrowthGlobal0X128_not_in: [BigInt!]
  feeGrowthGlobal1X128: BigInt
  feeGrowthGlobal1X128_not: BigInt
  feeGrowthGlobal1X128_gt: BigInt
  feeGrowthGlobal1X128_lt: BigInt
  feeGrowthGlobal1X128_gte: BigInt
  feeGrowthGlobal1X128_lte: BigInt
  feeGrowthGlobal1X128_in: [BigInt!]
  feeGrowthGlobal1X128_not_in: [BigInt!]
  token0Price: CONCENTRATED_BigDecimal
  token0Price_not: CONCENTRATED_BigDecimal
  token0Price_gt: CONCENTRATED_BigDecimal
  token0Price_lt: CONCENTRATED_BigDecimal
  token0Price_gte: CONCENTRATED_BigDecimal
  token0Price_lte: CONCENTRATED_BigDecimal
  token0Price_in: [CONCENTRATED_BigDecimal!]
  token0Price_not_in: [CONCENTRATED_BigDecimal!]
  token1Price: CONCENTRATED_BigDecimal
  token1Price_not: CONCENTRATED_BigDecimal
  token1Price_gt: CONCENTRATED_BigDecimal
  token1Price_lt: CONCENTRATED_BigDecimal
  token1Price_gte: CONCENTRATED_BigDecimal
  token1Price_lte: CONCENTRATED_BigDecimal
  token1Price_in: [CONCENTRATED_BigDecimal!]
  token1Price_not_in: [CONCENTRATED_BigDecimal!]
  tick: BigInt
  tick_not: BigInt
  tick_gt: BigInt
  tick_lt: BigInt
  tick_gte: BigInt
  tick_lte: BigInt
  tick_in: [BigInt!]
  tick_not_in: [BigInt!]
  observationIndex: BigInt
  observationIndex_not: BigInt
  observationIndex_gt: BigInt
  observationIndex_lt: BigInt
  observationIndex_gte: BigInt
  observationIndex_lte: BigInt
  observationIndex_in: [BigInt!]
  observationIndex_not_in: [BigInt!]
  volumeToken0: CONCENTRATED_BigDecimal
  volumeToken0_not: CONCENTRATED_BigDecimal
  volumeToken0_gt: CONCENTRATED_BigDecimal
  volumeToken0_lt: CONCENTRATED_BigDecimal
  volumeToken0_gte: CONCENTRATED_BigDecimal
  volumeToken0_lte: CONCENTRATED_BigDecimal
  volumeToken0_in: [CONCENTRATED_BigDecimal!]
  volumeToken0_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken1: CONCENTRATED_BigDecimal
  volumeToken1_not: CONCENTRATED_BigDecimal
  volumeToken1_gt: CONCENTRATED_BigDecimal
  volumeToken1_lt: CONCENTRATED_BigDecimal
  volumeToken1_gte: CONCENTRATED_BigDecimal
  volumeToken1_lte: CONCENTRATED_BigDecimal
  volumeToken1_in: [CONCENTRATED_BigDecimal!]
  volumeToken1_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_not: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  txCount: BigInt
  txCount_not: BigInt
  txCount_gt: BigInt
  txCount_lt: BigInt
  txCount_gte: BigInt
  txCount_lte: BigInt
  txCount_in: [BigInt!]
  txCount_not_in: [BigInt!]
  collectedFeesToken0: CONCENTRATED_BigDecimal
  collectedFeesToken0_not: CONCENTRATED_BigDecimal
  collectedFeesToken0_gt: CONCENTRATED_BigDecimal
  collectedFeesToken0_lt: CONCENTRATED_BigDecimal
  collectedFeesToken0_gte: CONCENTRATED_BigDecimal
  collectedFeesToken0_lte: CONCENTRATED_BigDecimal
  collectedFeesToken0_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken0_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken1: CONCENTRATED_BigDecimal
  collectedFeesToken1_not: CONCENTRATED_BigDecimal
  collectedFeesToken1_gt: CONCENTRATED_BigDecimal
  collectedFeesToken1_lt: CONCENTRATED_BigDecimal
  collectedFeesToken1_gte: CONCENTRATED_BigDecimal
  collectedFeesToken1_lte: CONCENTRATED_BigDecimal
  collectedFeesToken1_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken1_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesUSD: CONCENTRATED_BigDecimal
  collectedFeesUSD_not: CONCENTRATED_BigDecimal
  collectedFeesUSD_gt: CONCENTRATED_BigDecimal
  collectedFeesUSD_lt: CONCENTRATED_BigDecimal
  collectedFeesUSD_gte: CONCENTRATED_BigDecimal
  collectedFeesUSD_lte: CONCENTRATED_BigDecimal
  collectedFeesUSD_in: [CONCENTRATED_BigDecimal!]
  collectedFeesUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedToken0: CONCENTRATED_BigDecimal
  totalValueLockedToken0_not: CONCENTRATED_BigDecimal
  totalValueLockedToken0_gt: CONCENTRATED_BigDecimal
  totalValueLockedToken0_lt: CONCENTRATED_BigDecimal
  totalValueLockedToken0_gte: CONCENTRATED_BigDecimal
  totalValueLockedToken0_lte: CONCENTRATED_BigDecimal
  totalValueLockedToken0_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedToken0_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedToken1: CONCENTRATED_BigDecimal
  totalValueLockedToken1_not: CONCENTRATED_BigDecimal
  totalValueLockedToken1_gt: CONCENTRATED_BigDecimal
  totalValueLockedToken1_lt: CONCENTRATED_BigDecimal
  totalValueLockedToken1_gte: CONCENTRATED_BigDecimal
  totalValueLockedToken1_lte: CONCENTRATED_BigDecimal
  totalValueLockedToken1_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedToken1_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedETH: CONCENTRATED_BigDecimal
  totalValueLockedETH_not: CONCENTRATED_BigDecimal
  totalValueLockedETH_gt: CONCENTRATED_BigDecimal
  totalValueLockedETH_lt: CONCENTRATED_BigDecimal
  totalValueLockedETH_gte: CONCENTRATED_BigDecimal
  totalValueLockedETH_lte: CONCENTRATED_BigDecimal
  totalValueLockedETH_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedETH_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD: CONCENTRATED_BigDecimal
  totalValueLockedUSD_not: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSDUntracked: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_not: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_gt: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_lt: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_gte: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_lte: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSDUntracked_not_in: [CONCENTRATED_BigDecimal!]
  liquidityProviderCount: BigInt
  liquidityProviderCount_not: BigInt
  liquidityProviderCount_gt: BigInt
  liquidityProviderCount_lt: BigInt
  liquidityProviderCount_gte: BigInt
  liquidityProviderCount_lte: BigInt
  liquidityProviderCount_in: [BigInt!]
  liquidityProviderCount_not_in: [BigInt!]
  poolHourData_: CONCENTRATED_PoolHourData_filter
  poolDayData_: CONCENTRATED_PoolDayData_filter
  mints_: CONCENTRATED_Mint_filter
  burns_: CONCENTRATED_Burn_filter
  swaps_: CONCENTRATED_Swap_filter
  collects_: CONCENTRATED_Collect_filter
  ticks_: CONCENTRATED_Tick_filter
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Pool_filter]
  or: [CONCENTRATED_Pool_filter]
}

enum CONCENTRATED_Pool_orderBy {
  id
  createdAtTimestamp
  createdAtBlockNumber
  token0
  token0__id
  token0__symbol
  token0__name
  token0__decimals
  token0__totalSupply
  token0__volume
  token0__volumeUSD
  token0__untrackedVolumeUSD
  token0__feesUSD
  token0__txCount
  token0__poolCount
  token0__totalValueLocked
  token0__totalValueLockedUSD
  token0__totalValueLockedUSDUntracked
  token0__derivedETH
  token1
  token1__id
  token1__symbol
  token1__name
  token1__decimals
  token1__totalSupply
  token1__volume
  token1__volumeUSD
  token1__untrackedVolumeUSD
  token1__feesUSD
  token1__txCount
  token1__poolCount
  token1__totalValueLocked
  token1__totalValueLockedUSD
  token1__totalValueLockedUSDUntracked
  token1__derivedETH
  feeTier
  liquidity
  sqrtPrice
  feeGrowthGlobal0X128
  feeGrowthGlobal1X128
  token0Price
  token1Price
  tick
  observationIndex
  volumeToken0
  volumeToken1
  volumeUSD
  untrackedVolumeUSD
  feesUSD
  txCount
  collectedFeesToken0
  collectedFeesToken1
  collectedFeesUSD
  totalValueLockedToken0
  totalValueLockedToken1
  totalValueLockedETH
  totalValueLockedUSD
  totalValueLockedUSDUntracked
  liquidityProviderCount
  poolHourData
  poolDayData
  mints
  burns
  swaps
  collects
  ticks
}

type CONCENTRATED_Position {
  id: ID!
  owner: CONCENTRATED_Bytes!
  pool: CONCENTRATED_Pool!
  token0: CONCENTRATED_Token!
  token1: CONCENTRATED_Token!
  tickLower: CONCENTRATED_Tick!
  tickUpper: CONCENTRATED_Tick!
  liquidity: BigInt!
  depositedToken0: CONCENTRATED_BigDecimal!
  depositedToken1: CONCENTRATED_BigDecimal!
  withdrawnToken0: CONCENTRATED_BigDecimal!
  withdrawnToken1: CONCENTRATED_BigDecimal!
  collectedFeesToken0: CONCENTRATED_BigDecimal!
  collectedFeesToken1: CONCENTRATED_BigDecimal!
  transaction: CONCENTRATED_Transaction!
  feeGrowthInside0LastX128: BigInt!
  feeGrowthInside1LastX128: BigInt!
}

type CONCENTRATED_PositionSnapshot {
  id: ID!
  owner: CONCENTRATED_Bytes!
  pool: CONCENTRATED_Pool!
  position: CONCENTRATED_Position!
  blockNumber: BigInt!
  timestamp: BigInt!
  liquidity: BigInt!
  depositedToken0: CONCENTRATED_BigDecimal!
  depositedToken1: CONCENTRATED_BigDecimal!
  withdrawnToken0: CONCENTRATED_BigDecimal!
  withdrawnToken1: CONCENTRATED_BigDecimal!
  collectedFeesToken0: CONCENTRATED_BigDecimal!
  collectedFeesToken1: CONCENTRATED_BigDecimal!
  transaction: CONCENTRATED_Transaction!
  feeGrowthInside0LastX128: BigInt!
  feeGrowthInside1LastX128: BigInt!
}

input CONCENTRATED_PositionSnapshot_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  owner: CONCENTRATED_Bytes
  owner_not: CONCENTRATED_Bytes
  owner_gt: CONCENTRATED_Bytes
  owner_lt: CONCENTRATED_Bytes
  owner_gte: CONCENTRATED_Bytes
  owner_lte: CONCENTRATED_Bytes
  owner_in: [CONCENTRATED_Bytes!]
  owner_not_in: [CONCENTRATED_Bytes!]
  owner_contains: CONCENTRATED_Bytes
  owner_not_contains: CONCENTRATED_Bytes
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  position: String
  position_not: String
  position_gt: String
  position_lt: String
  position_gte: String
  position_lte: String
  position_in: [String!]
  position_not_in: [String!]
  position_contains: String
  position_contains_nocase: String
  position_not_contains: String
  position_not_contains_nocase: String
  position_starts_with: String
  position_starts_with_nocase: String
  position_not_starts_with: String
  position_not_starts_with_nocase: String
  position_ends_with: String
  position_ends_with_nocase: String
  position_not_ends_with: String
  position_not_ends_with_nocase: String
  position_: CONCENTRATED_Position_filter
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  liquidity: BigInt
  liquidity_not: BigInt
  liquidity_gt: BigInt
  liquidity_lt: BigInt
  liquidity_gte: BigInt
  liquidity_lte: BigInt
  liquidity_in: [BigInt!]
  liquidity_not_in: [BigInt!]
  depositedToken0: CONCENTRATED_BigDecimal
  depositedToken0_not: CONCENTRATED_BigDecimal
  depositedToken0_gt: CONCENTRATED_BigDecimal
  depositedToken0_lt: CONCENTRATED_BigDecimal
  depositedToken0_gte: CONCENTRATED_BigDecimal
  depositedToken0_lte: CONCENTRATED_BigDecimal
  depositedToken0_in: [CONCENTRATED_BigDecimal!]
  depositedToken0_not_in: [CONCENTRATED_BigDecimal!]
  depositedToken1: CONCENTRATED_BigDecimal
  depositedToken1_not: CONCENTRATED_BigDecimal
  depositedToken1_gt: CONCENTRATED_BigDecimal
  depositedToken1_lt: CONCENTRATED_BigDecimal
  depositedToken1_gte: CONCENTRATED_BigDecimal
  depositedToken1_lte: CONCENTRATED_BigDecimal
  depositedToken1_in: [CONCENTRATED_BigDecimal!]
  depositedToken1_not_in: [CONCENTRATED_BigDecimal!]
  withdrawnToken0: CONCENTRATED_BigDecimal
  withdrawnToken0_not: CONCENTRATED_BigDecimal
  withdrawnToken0_gt: CONCENTRATED_BigDecimal
  withdrawnToken0_lt: CONCENTRATED_BigDecimal
  withdrawnToken0_gte: CONCENTRATED_BigDecimal
  withdrawnToken0_lte: CONCENTRATED_BigDecimal
  withdrawnToken0_in: [CONCENTRATED_BigDecimal!]
  withdrawnToken0_not_in: [CONCENTRATED_BigDecimal!]
  withdrawnToken1: CONCENTRATED_BigDecimal
  withdrawnToken1_not: CONCENTRATED_BigDecimal
  withdrawnToken1_gt: CONCENTRATED_BigDecimal
  withdrawnToken1_lt: CONCENTRATED_BigDecimal
  withdrawnToken1_gte: CONCENTRATED_BigDecimal
  withdrawnToken1_lte: CONCENTRATED_BigDecimal
  withdrawnToken1_in: [CONCENTRATED_BigDecimal!]
  withdrawnToken1_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken0: CONCENTRATED_BigDecimal
  collectedFeesToken0_not: CONCENTRATED_BigDecimal
  collectedFeesToken0_gt: CONCENTRATED_BigDecimal
  collectedFeesToken0_lt: CONCENTRATED_BigDecimal
  collectedFeesToken0_gte: CONCENTRATED_BigDecimal
  collectedFeesToken0_lte: CONCENTRATED_BigDecimal
  collectedFeesToken0_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken0_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken1: CONCENTRATED_BigDecimal
  collectedFeesToken1_not: CONCENTRATED_BigDecimal
  collectedFeesToken1_gt: CONCENTRATED_BigDecimal
  collectedFeesToken1_lt: CONCENTRATED_BigDecimal
  collectedFeesToken1_gte: CONCENTRATED_BigDecimal
  collectedFeesToken1_lte: CONCENTRATED_BigDecimal
  collectedFeesToken1_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken1_not_in: [CONCENTRATED_BigDecimal!]
  transaction: String
  transaction_not: String
  transaction_gt: String
  transaction_lt: String
  transaction_gte: String
  transaction_lte: String
  transaction_in: [String!]
  transaction_not_in: [String!]
  transaction_contains: String
  transaction_contains_nocase: String
  transaction_not_contains: String
  transaction_not_contains_nocase: String
  transaction_starts_with: String
  transaction_starts_with_nocase: String
  transaction_not_starts_with: String
  transaction_not_starts_with_nocase: String
  transaction_ends_with: String
  transaction_ends_with_nocase: String
  transaction_not_ends_with: String
  transaction_not_ends_with_nocase: String
  transaction_: CONCENTRATED_Transaction_filter
  feeGrowthInside0LastX128: BigInt
  feeGrowthInside0LastX128_not: BigInt
  feeGrowthInside0LastX128_gt: BigInt
  feeGrowthInside0LastX128_lt: BigInt
  feeGrowthInside0LastX128_gte: BigInt
  feeGrowthInside0LastX128_lte: BigInt
  feeGrowthInside0LastX128_in: [BigInt!]
  feeGrowthInside0LastX128_not_in: [BigInt!]
  feeGrowthInside1LastX128: BigInt
  feeGrowthInside1LastX128_not: BigInt
  feeGrowthInside1LastX128_gt: BigInt
  feeGrowthInside1LastX128_lt: BigInt
  feeGrowthInside1LastX128_gte: BigInt
  feeGrowthInside1LastX128_lte: BigInt
  feeGrowthInside1LastX128_in: [BigInt!]
  feeGrowthInside1LastX128_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_PositionSnapshot_filter]
  or: [CONCENTRATED_PositionSnapshot_filter]
}

enum CONCENTRATED_PositionSnapshot_orderBy {
  id
  owner
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  position
  position__id
  position__owner
  position__liquidity
  position__depositedToken0
  position__depositedToken1
  position__withdrawnToken0
  position__withdrawnToken1
  position__collectedFeesToken0
  position__collectedFeesToken1
  position__feeGrowthInside0LastX128
  position__feeGrowthInside1LastX128
  blockNumber
  timestamp
  liquidity
  depositedToken0
  depositedToken1
  withdrawnToken0
  withdrawnToken1
  collectedFeesToken0
  collectedFeesToken1
  transaction
  transaction__id
  transaction__blockNumber
  transaction__timestamp
  transaction__gasUsed
  transaction__gasPrice
  feeGrowthInside0LastX128
  feeGrowthInside1LastX128
}

input CONCENTRATED_Position_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  owner: CONCENTRATED_Bytes
  owner_not: CONCENTRATED_Bytes
  owner_gt: CONCENTRATED_Bytes
  owner_lt: CONCENTRATED_Bytes
  owner_gte: CONCENTRATED_Bytes
  owner_lte: CONCENTRATED_Bytes
  owner_in: [CONCENTRATED_Bytes!]
  owner_not_in: [CONCENTRATED_Bytes!]
  owner_contains: CONCENTRATED_Bytes
  owner_not_contains: CONCENTRATED_Bytes
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  token0: String
  token0_not: String
  token0_gt: String
  token0_lt: String
  token0_gte: String
  token0_lte: String
  token0_in: [String!]
  token0_not_in: [String!]
  token0_contains: String
  token0_contains_nocase: String
  token0_not_contains: String
  token0_not_contains_nocase: String
  token0_starts_with: String
  token0_starts_with_nocase: String
  token0_not_starts_with: String
  token0_not_starts_with_nocase: String
  token0_ends_with: String
  token0_ends_with_nocase: String
  token0_not_ends_with: String
  token0_not_ends_with_nocase: String
  token0_: CONCENTRATED_Token_filter
  token1: String
  token1_not: String
  token1_gt: String
  token1_lt: String
  token1_gte: String
  token1_lte: String
  token1_in: [String!]
  token1_not_in: [String!]
  token1_contains: String
  token1_contains_nocase: String
  token1_not_contains: String
  token1_not_contains_nocase: String
  token1_starts_with: String
  token1_starts_with_nocase: String
  token1_not_starts_with: String
  token1_not_starts_with_nocase: String
  token1_ends_with: String
  token1_ends_with_nocase: String
  token1_not_ends_with: String
  token1_not_ends_with_nocase: String
  token1_: CONCENTRATED_Token_filter
  tickLower: String
  tickLower_not: String
  tickLower_gt: String
  tickLower_lt: String
  tickLower_gte: String
  tickLower_lte: String
  tickLower_in: [String!]
  tickLower_not_in: [String!]
  tickLower_contains: String
  tickLower_contains_nocase: String
  tickLower_not_contains: String
  tickLower_not_contains_nocase: String
  tickLower_starts_with: String
  tickLower_starts_with_nocase: String
  tickLower_not_starts_with: String
  tickLower_not_starts_with_nocase: String
  tickLower_ends_with: String
  tickLower_ends_with_nocase: String
  tickLower_not_ends_with: String
  tickLower_not_ends_with_nocase: String
  tickLower_: CONCENTRATED_Tick_filter
  tickUpper: String
  tickUpper_not: String
  tickUpper_gt: String
  tickUpper_lt: String
  tickUpper_gte: String
  tickUpper_lte: String
  tickUpper_in: [String!]
  tickUpper_not_in: [String!]
  tickUpper_contains: String
  tickUpper_contains_nocase: String
  tickUpper_not_contains: String
  tickUpper_not_contains_nocase: String
  tickUpper_starts_with: String
  tickUpper_starts_with_nocase: String
  tickUpper_not_starts_with: String
  tickUpper_not_starts_with_nocase: String
  tickUpper_ends_with: String
  tickUpper_ends_with_nocase: String
  tickUpper_not_ends_with: String
  tickUpper_not_ends_with_nocase: String
  tickUpper_: CONCENTRATED_Tick_filter
  liquidity: BigInt
  liquidity_not: BigInt
  liquidity_gt: BigInt
  liquidity_lt: BigInt
  liquidity_gte: BigInt
  liquidity_lte: BigInt
  liquidity_in: [BigInt!]
  liquidity_not_in: [BigInt!]
  depositedToken0: CONCENTRATED_BigDecimal
  depositedToken0_not: CONCENTRATED_BigDecimal
  depositedToken0_gt: CONCENTRATED_BigDecimal
  depositedToken0_lt: CONCENTRATED_BigDecimal
  depositedToken0_gte: CONCENTRATED_BigDecimal
  depositedToken0_lte: CONCENTRATED_BigDecimal
  depositedToken0_in: [CONCENTRATED_BigDecimal!]
  depositedToken0_not_in: [CONCENTRATED_BigDecimal!]
  depositedToken1: CONCENTRATED_BigDecimal
  depositedToken1_not: CONCENTRATED_BigDecimal
  depositedToken1_gt: CONCENTRATED_BigDecimal
  depositedToken1_lt: CONCENTRATED_BigDecimal
  depositedToken1_gte: CONCENTRATED_BigDecimal
  depositedToken1_lte: CONCENTRATED_BigDecimal
  depositedToken1_in: [CONCENTRATED_BigDecimal!]
  depositedToken1_not_in: [CONCENTRATED_BigDecimal!]
  withdrawnToken0: CONCENTRATED_BigDecimal
  withdrawnToken0_not: CONCENTRATED_BigDecimal
  withdrawnToken0_gt: CONCENTRATED_BigDecimal
  withdrawnToken0_lt: CONCENTRATED_BigDecimal
  withdrawnToken0_gte: CONCENTRATED_BigDecimal
  withdrawnToken0_lte: CONCENTRATED_BigDecimal
  withdrawnToken0_in: [CONCENTRATED_BigDecimal!]
  withdrawnToken0_not_in: [CONCENTRATED_BigDecimal!]
  withdrawnToken1: CONCENTRATED_BigDecimal
  withdrawnToken1_not: CONCENTRATED_BigDecimal
  withdrawnToken1_gt: CONCENTRATED_BigDecimal
  withdrawnToken1_lt: CONCENTRATED_BigDecimal
  withdrawnToken1_gte: CONCENTRATED_BigDecimal
  withdrawnToken1_lte: CONCENTRATED_BigDecimal
  withdrawnToken1_in: [CONCENTRATED_BigDecimal!]
  withdrawnToken1_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken0: CONCENTRATED_BigDecimal
  collectedFeesToken0_not: CONCENTRATED_BigDecimal
  collectedFeesToken0_gt: CONCENTRATED_BigDecimal
  collectedFeesToken0_lt: CONCENTRATED_BigDecimal
  collectedFeesToken0_gte: CONCENTRATED_BigDecimal
  collectedFeesToken0_lte: CONCENTRATED_BigDecimal
  collectedFeesToken0_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken0_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken1: CONCENTRATED_BigDecimal
  collectedFeesToken1_not: CONCENTRATED_BigDecimal
  collectedFeesToken1_gt: CONCENTRATED_BigDecimal
  collectedFeesToken1_lt: CONCENTRATED_BigDecimal
  collectedFeesToken1_gte: CONCENTRATED_BigDecimal
  collectedFeesToken1_lte: CONCENTRATED_BigDecimal
  collectedFeesToken1_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken1_not_in: [CONCENTRATED_BigDecimal!]
  transaction: String
  transaction_not: String
  transaction_gt: String
  transaction_lt: String
  transaction_gte: String
  transaction_lte: String
  transaction_in: [String!]
  transaction_not_in: [String!]
  transaction_contains: String
  transaction_contains_nocase: String
  transaction_not_contains: String
  transaction_not_contains_nocase: String
  transaction_starts_with: String
  transaction_starts_with_nocase: String
  transaction_not_starts_with: String
  transaction_not_starts_with_nocase: String
  transaction_ends_with: String
  transaction_ends_with_nocase: String
  transaction_not_ends_with: String
  transaction_not_ends_with_nocase: String
  transaction_: CONCENTRATED_Transaction_filter
  feeGrowthInside0LastX128: BigInt
  feeGrowthInside0LastX128_not: BigInt
  feeGrowthInside0LastX128_gt: BigInt
  feeGrowthInside0LastX128_lt: BigInt
  feeGrowthInside0LastX128_gte: BigInt
  feeGrowthInside0LastX128_lte: BigInt
  feeGrowthInside0LastX128_in: [BigInt!]
  feeGrowthInside0LastX128_not_in: [BigInt!]
  feeGrowthInside1LastX128: BigInt
  feeGrowthInside1LastX128_not: BigInt
  feeGrowthInside1LastX128_gt: BigInt
  feeGrowthInside1LastX128_lt: BigInt
  feeGrowthInside1LastX128_gte: BigInt
  feeGrowthInside1LastX128_lte: BigInt
  feeGrowthInside1LastX128_in: [BigInt!]
  feeGrowthInside1LastX128_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Position_filter]
  or: [CONCENTRATED_Position_filter]
}

enum CONCENTRATED_Position_orderBy {
  id
  owner
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  token0
  token0__id
  token0__symbol
  token0__name
  token0__decimals
  token0__totalSupply
  token0__volume
  token0__volumeUSD
  token0__untrackedVolumeUSD
  token0__feesUSD
  token0__txCount
  token0__poolCount
  token0__totalValueLocked
  token0__totalValueLockedUSD
  token0__totalValueLockedUSDUntracked
  token0__derivedETH
  token1
  token1__id
  token1__symbol
  token1__name
  token1__decimals
  token1__totalSupply
  token1__volume
  token1__volumeUSD
  token1__untrackedVolumeUSD
  token1__feesUSD
  token1__txCount
  token1__poolCount
  token1__totalValueLocked
  token1__totalValueLockedUSD
  token1__totalValueLockedUSDUntracked
  token1__derivedETH
  tickLower
  tickLower__id
  tickLower__poolAddress
  tickLower__tickIdx
  tickLower__liquidityGross
  tickLower__liquidityNet
  tickLower__price0
  tickLower__price1
  tickLower__volumeToken0
  tickLower__volumeToken1
  tickLower__volumeUSD
  tickLower__untrackedVolumeUSD
  tickLower__feesUSD
  tickLower__collectedFeesToken0
  tickLower__collectedFeesToken1
  tickLower__collectedFeesUSD
  tickLower__createdAtTimestamp
  tickLower__createdAtBlockNumber
  tickLower__liquidityProviderCount
  tickLower__feeGrowthOutside0X128
  tickLower__feeGrowthOutside1X128
  tickUpper
  tickUpper__id
  tickUpper__poolAddress
  tickUpper__tickIdx
  tickUpper__liquidityGross
  tickUpper__liquidityNet
  tickUpper__price0
  tickUpper__price1
  tickUpper__volumeToken0
  tickUpper__volumeToken1
  tickUpper__volumeUSD
  tickUpper__untrackedVolumeUSD
  tickUpper__feesUSD
  tickUpper__collectedFeesToken0
  tickUpper__collectedFeesToken1
  tickUpper__collectedFeesUSD
  tickUpper__createdAtTimestamp
  tickUpper__createdAtBlockNumber
  tickUpper__liquidityProviderCount
  tickUpper__feeGrowthOutside0X128
  tickUpper__feeGrowthOutside1X128
  liquidity
  depositedToken0
  depositedToken1
  withdrawnToken0
  withdrawnToken1
  collectedFeesToken0
  collectedFeesToken1
  transaction
  transaction__id
  transaction__blockNumber
  transaction__timestamp
  transaction__gasUsed
  transaction__gasPrice
  feeGrowthInside0LastX128
  feeGrowthInside1LastX128
}

type Query {
  CONCENTRATED_factory(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Factory
  CONCENTRATED_factories(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Factory_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Factory_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Factory!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_bundle(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Bundle
  CONCENTRATED_bundles(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Bundle_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Bundle_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Bundle!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_token(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Token
  CONCENTRATED_tokens(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Token_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Token_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Token!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_pool(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Pool
  CONCENTRATED_pools(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Pool_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Pool_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Pool!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_tick(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Tick
  CONCENTRATED_ticks(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Tick_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Tick_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Tick!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_position(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Position
  CONCENTRATED_positions(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Position_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Position_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Position!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_positionSnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_PositionSnapshot
  CONCENTRATED_positionSnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_PositionSnapshot_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_PositionSnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_PositionSnapshot!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_transaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Transaction
  CONCENTRATED_transactions(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Transaction_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Transaction_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Transaction!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_mint(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Mint
  CONCENTRATED_mints(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Mint_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Mint_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Mint!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_burn(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Burn
  CONCENTRATED_burns(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Burn_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Burn_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Burn!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_swap(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Swap
  CONCENTRATED_swaps(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Swap_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Swap_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Swap!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_collect(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Collect
  CONCENTRATED_collects(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Collect_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Collect_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Collect!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_flash(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Flash
  CONCENTRATED_flashes(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Flash_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Flash_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Flash!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_uniswapDayData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_UniswapDayData
  CONCENTRATED_uniswapDayDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_UniswapDayData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_UniswapDayData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_UniswapDayData!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_poolDayData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_PoolDayData
  CONCENTRATED_poolDayDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_PoolDayData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_PoolDayData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_PoolDayData!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_poolHourData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_PoolHourData
  CONCENTRATED_poolHourDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_PoolHourData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_PoolHourData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_PoolHourData!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_tickHourData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_TickHourData
  CONCENTRATED_tickHourDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_TickHourData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_TickHourData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_TickHourData!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_tickDayData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_TickDayData
  CONCENTRATED_tickDayDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_TickDayData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_TickDayData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_TickDayData!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_tokenDayData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_TokenDayData
  CONCENTRATED_tokenDayDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_TokenDayData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_TokenDayData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_TokenDayData!]! @merge(keyField: "id", keyArg: "where.id_in")
  CONCENTRATED_tokenHourData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_TokenHourData
  CONCENTRATED_tokenHourDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_TokenHourData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_TokenHourData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_TokenHourData!]! @merge(keyField: "id", keyArg: "where.id_in")
  """Access to subgraph metadata"""
  CONCENTRATED__meta(block: CONCENTRATED_Block_height): CONCENTRATED__Meta_
}

type Subscription {
  CONCENTRATED_factory(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Factory
  CONCENTRATED_factories(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Factory_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Factory_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Factory!]!
  CONCENTRATED_bundle(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Bundle
  CONCENTRATED_bundles(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Bundle_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Bundle_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Bundle!]!
  CONCENTRATED_token(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Token
  CONCENTRATED_tokens(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Token_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Token_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Token!]!
  CONCENTRATED_pool(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Pool
  CONCENTRATED_pools(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Pool_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Pool_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Pool!]!
  CONCENTRATED_tick(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Tick
  CONCENTRATED_ticks(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Tick_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Tick_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Tick!]!
  CONCENTRATED_position(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Position
  CONCENTRATED_positions(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Position_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Position_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Position!]!
  CONCENTRATED_positionSnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_PositionSnapshot
  CONCENTRATED_positionSnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_PositionSnapshot_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_PositionSnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_PositionSnapshot!]!
  CONCENTRATED_transaction(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Transaction
  CONCENTRATED_transactions(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Transaction_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Transaction_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Transaction!]!
  CONCENTRATED_mint(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Mint
  CONCENTRATED_mints(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Mint_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Mint_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Mint!]!
  CONCENTRATED_burn(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Burn
  CONCENTRATED_burns(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Burn_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Burn_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Burn!]!
  CONCENTRATED_swap(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Swap
  CONCENTRATED_swaps(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Swap_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Swap_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Swap!]!
  CONCENTRATED_collect(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Collect
  CONCENTRATED_collects(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Collect_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Collect_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Collect!]!
  CONCENTRATED_flash(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_Flash
  CONCENTRATED_flashes(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_Flash_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_Flash_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_Flash!]!
  CONCENTRATED_uniswapDayData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_UniswapDayData
  CONCENTRATED_uniswapDayDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_UniswapDayData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_UniswapDayData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_UniswapDayData!]!
  CONCENTRATED_poolDayData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_PoolDayData
  CONCENTRATED_poolDayDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_PoolDayData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_PoolDayData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_PoolDayData!]!
  CONCENTRATED_poolHourData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_PoolHourData
  CONCENTRATED_poolHourDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_PoolHourData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_PoolHourData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_PoolHourData!]!
  CONCENTRATED_tickHourData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_TickHourData
  CONCENTRATED_tickHourDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_TickHourData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_TickHourData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_TickHourData!]!
  CONCENTRATED_tickDayData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_TickDayData
  CONCENTRATED_tickDayDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_TickDayData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_TickDayData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_TickDayData!]!
  CONCENTRATED_tokenDayData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_TokenDayData
  CONCENTRATED_tokenDayDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_TokenDayData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_TokenDayData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_TokenDayData!]!
  CONCENTRATED_tokenHourData(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): CONCENTRATED_TokenHourData
  CONCENTRATED_tokenHourDatas(
    skip: Int = 0
    first: Int = 100
    orderBy: CONCENTRATED_TokenHourData_orderBy
    orderDirection: CONCENTRATED_OrderDirection
    where: CONCENTRATED_TokenHourData_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: CONCENTRATED_Block_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): [CONCENTRATED_TokenHourData!]!
  """Access to subgraph metadata"""
  CONCENTRATED__meta(block: CONCENTRATED_Block_height): CONCENTRATED__Meta_
}

type CONCENTRATED_Swap {
  id: ID!
  transaction: CONCENTRATED_Transaction!
  timestamp: BigInt!
  pool: CONCENTRATED_Pool!
  token0: CONCENTRATED_Token!
  token1: CONCENTRATED_Token!
  sender: CONCENTRATED_Bytes!
  recipient: CONCENTRATED_Bytes!
  origin: CONCENTRATED_Bytes!
  amount0: CONCENTRATED_BigDecimal!
  amount1: CONCENTRATED_BigDecimal!
  amountUSD: CONCENTRATED_BigDecimal!
  sqrtPriceX96: BigInt!
  tick: BigInt!
  logIndex: BigInt
}

input CONCENTRATED_Swap_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  transaction: String
  transaction_not: String
  transaction_gt: String
  transaction_lt: String
  transaction_gte: String
  transaction_lte: String
  transaction_in: [String!]
  transaction_not_in: [String!]
  transaction_contains: String
  transaction_contains_nocase: String
  transaction_not_contains: String
  transaction_not_contains_nocase: String
  transaction_starts_with: String
  transaction_starts_with_nocase: String
  transaction_not_starts_with: String
  transaction_not_starts_with_nocase: String
  transaction_ends_with: String
  transaction_ends_with_nocase: String
  transaction_not_ends_with: String
  transaction_not_ends_with_nocase: String
  transaction_: CONCENTRATED_Transaction_filter
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  token0: String
  token0_not: String
  token0_gt: String
  token0_lt: String
  token0_gte: String
  token0_lte: String
  token0_in: [String!]
  token0_not_in: [String!]
  token0_contains: String
  token0_contains_nocase: String
  token0_not_contains: String
  token0_not_contains_nocase: String
  token0_starts_with: String
  token0_starts_with_nocase: String
  token0_not_starts_with: String
  token0_not_starts_with_nocase: String
  token0_ends_with: String
  token0_ends_with_nocase: String
  token0_not_ends_with: String
  token0_not_ends_with_nocase: String
  token0_: CONCENTRATED_Token_filter
  token1: String
  token1_not: String
  token1_gt: String
  token1_lt: String
  token1_gte: String
  token1_lte: String
  token1_in: [String!]
  token1_not_in: [String!]
  token1_contains: String
  token1_contains_nocase: String
  token1_not_contains: String
  token1_not_contains_nocase: String
  token1_starts_with: String
  token1_starts_with_nocase: String
  token1_not_starts_with: String
  token1_not_starts_with_nocase: String
  token1_ends_with: String
  token1_ends_with_nocase: String
  token1_not_ends_with: String
  token1_not_ends_with_nocase: String
  token1_: CONCENTRATED_Token_filter
  sender: CONCENTRATED_Bytes
  sender_not: CONCENTRATED_Bytes
  sender_gt: CONCENTRATED_Bytes
  sender_lt: CONCENTRATED_Bytes
  sender_gte: CONCENTRATED_Bytes
  sender_lte: CONCENTRATED_Bytes
  sender_in: [CONCENTRATED_Bytes!]
  sender_not_in: [CONCENTRATED_Bytes!]
  sender_contains: CONCENTRATED_Bytes
  sender_not_contains: CONCENTRATED_Bytes
  recipient: CONCENTRATED_Bytes
  recipient_not: CONCENTRATED_Bytes
  recipient_gt: CONCENTRATED_Bytes
  recipient_lt: CONCENTRATED_Bytes
  recipient_gte: CONCENTRATED_Bytes
  recipient_lte: CONCENTRATED_Bytes
  recipient_in: [CONCENTRATED_Bytes!]
  recipient_not_in: [CONCENTRATED_Bytes!]
  recipient_contains: CONCENTRATED_Bytes
  recipient_not_contains: CONCENTRATED_Bytes
  origin: CONCENTRATED_Bytes
  origin_not: CONCENTRATED_Bytes
  origin_gt: CONCENTRATED_Bytes
  origin_lt: CONCENTRATED_Bytes
  origin_gte: CONCENTRATED_Bytes
  origin_lte: CONCENTRATED_Bytes
  origin_in: [CONCENTRATED_Bytes!]
  origin_not_in: [CONCENTRATED_Bytes!]
  origin_contains: CONCENTRATED_Bytes
  origin_not_contains: CONCENTRATED_Bytes
  amount0: CONCENTRATED_BigDecimal
  amount0_not: CONCENTRATED_BigDecimal
  amount0_gt: CONCENTRATED_BigDecimal
  amount0_lt: CONCENTRATED_BigDecimal
  amount0_gte: CONCENTRATED_BigDecimal
  amount0_lte: CONCENTRATED_BigDecimal
  amount0_in: [CONCENTRATED_BigDecimal!]
  amount0_not_in: [CONCENTRATED_BigDecimal!]
  amount1: CONCENTRATED_BigDecimal
  amount1_not: CONCENTRATED_BigDecimal
  amount1_gt: CONCENTRATED_BigDecimal
  amount1_lt: CONCENTRATED_BigDecimal
  amount1_gte: CONCENTRATED_BigDecimal
  amount1_lte: CONCENTRATED_BigDecimal
  amount1_in: [CONCENTRATED_BigDecimal!]
  amount1_not_in: [CONCENTRATED_BigDecimal!]
  amountUSD: CONCENTRATED_BigDecimal
  amountUSD_not: CONCENTRATED_BigDecimal
  amountUSD_gt: CONCENTRATED_BigDecimal
  amountUSD_lt: CONCENTRATED_BigDecimal
  amountUSD_gte: CONCENTRATED_BigDecimal
  amountUSD_lte: CONCENTRATED_BigDecimal
  amountUSD_in: [CONCENTRATED_BigDecimal!]
  amountUSD_not_in: [CONCENTRATED_BigDecimal!]
  sqrtPriceX96: BigInt
  sqrtPriceX96_not: BigInt
  sqrtPriceX96_gt: BigInt
  sqrtPriceX96_lt: BigInt
  sqrtPriceX96_gte: BigInt
  sqrtPriceX96_lte: BigInt
  sqrtPriceX96_in: [BigInt!]
  sqrtPriceX96_not_in: [BigInt!]
  tick: BigInt
  tick_not: BigInt
  tick_gt: BigInt
  tick_lt: BigInt
  tick_gte: BigInt
  tick_lte: BigInt
  tick_in: [BigInt!]
  tick_not_in: [BigInt!]
  logIndex: BigInt
  logIndex_not: BigInt
  logIndex_gt: BigInt
  logIndex_lt: BigInt
  logIndex_gte: BigInt
  logIndex_lte: BigInt
  logIndex_in: [BigInt!]
  logIndex_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Swap_filter]
  or: [CONCENTRATED_Swap_filter]
}

enum CONCENTRATED_Swap_orderBy {
  id
  transaction
  transaction__id
  transaction__blockNumber
  transaction__timestamp
  transaction__gasUsed
  transaction__gasPrice
  timestamp
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  token0
  token0__id
  token0__symbol
  token0__name
  token0__decimals
  token0__totalSupply
  token0__volume
  token0__volumeUSD
  token0__untrackedVolumeUSD
  token0__feesUSD
  token0__txCount
  token0__poolCount
  token0__totalValueLocked
  token0__totalValueLockedUSD
  token0__totalValueLockedUSDUntracked
  token0__derivedETH
  token1
  token1__id
  token1__symbol
  token1__name
  token1__decimals
  token1__totalSupply
  token1__volume
  token1__volumeUSD
  token1__untrackedVolumeUSD
  token1__feesUSD
  token1__txCount
  token1__poolCount
  token1__totalValueLocked
  token1__totalValueLockedUSD
  token1__totalValueLockedUSDUntracked
  token1__derivedETH
  sender
  recipient
  origin
  amount0
  amount1
  amountUSD
  sqrtPriceX96
  tick
  logIndex
}

type CONCENTRATED_Tick {
  id: ID!
  poolAddress: String
  tickIdx: BigInt!
  pool: CONCENTRATED_Pool!
  liquidityGross: BigInt!
  liquidityNet: BigInt!
  price0: CONCENTRATED_BigDecimal!
  price1: CONCENTRATED_BigDecimal!
  volumeToken0: CONCENTRATED_BigDecimal!
  volumeToken1: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  untrackedVolumeUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  collectedFeesToken0: CONCENTRATED_BigDecimal!
  collectedFeesToken1: CONCENTRATED_BigDecimal!
  collectedFeesUSD: CONCENTRATED_BigDecimal!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  liquidityProviderCount: BigInt!
  feeGrowthOutside0X128: BigInt!
  feeGrowthOutside1X128: BigInt!
}

type CONCENTRATED_TickDayData {
  id: ID!
  date: Int!
  pool: CONCENTRATED_Pool!
  tick: CONCENTRATED_Tick!
  liquidityGross: BigInt!
  liquidityNet: BigInt!
  volumeToken0: CONCENTRATED_BigDecimal!
  volumeToken1: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  feeGrowthOutside0X128: BigInt!
  feeGrowthOutside1X128: BigInt!
}

input CONCENTRATED_TickDayData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  date: Int
  date_not: Int
  date_gt: Int
  date_lt: Int
  date_gte: Int
  date_lte: Int
  date_in: [Int!]
  date_not_in: [Int!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  tick: String
  tick_not: String
  tick_gt: String
  tick_lt: String
  tick_gte: String
  tick_lte: String
  tick_in: [String!]
  tick_not_in: [String!]
  tick_contains: String
  tick_contains_nocase: String
  tick_not_contains: String
  tick_not_contains_nocase: String
  tick_starts_with: String
  tick_starts_with_nocase: String
  tick_not_starts_with: String
  tick_not_starts_with_nocase: String
  tick_ends_with: String
  tick_ends_with_nocase: String
  tick_not_ends_with: String
  tick_not_ends_with_nocase: String
  tick_: CONCENTRATED_Tick_filter
  liquidityGross: BigInt
  liquidityGross_not: BigInt
  liquidityGross_gt: BigInt
  liquidityGross_lt: BigInt
  liquidityGross_gte: BigInt
  liquidityGross_lte: BigInt
  liquidityGross_in: [BigInt!]
  liquidityGross_not_in: [BigInt!]
  liquidityNet: BigInt
  liquidityNet_not: BigInt
  liquidityNet_gt: BigInt
  liquidityNet_lt: BigInt
  liquidityNet_gte: BigInt
  liquidityNet_lte: BigInt
  liquidityNet_in: [BigInt!]
  liquidityNet_not_in: [BigInt!]
  volumeToken0: CONCENTRATED_BigDecimal
  volumeToken0_not: CONCENTRATED_BigDecimal
  volumeToken0_gt: CONCENTRATED_BigDecimal
  volumeToken0_lt: CONCENTRATED_BigDecimal
  volumeToken0_gte: CONCENTRATED_BigDecimal
  volumeToken0_lte: CONCENTRATED_BigDecimal
  volumeToken0_in: [CONCENTRATED_BigDecimal!]
  volumeToken0_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken1: CONCENTRATED_BigDecimal
  volumeToken1_not: CONCENTRATED_BigDecimal
  volumeToken1_gt: CONCENTRATED_BigDecimal
  volumeToken1_lt: CONCENTRATED_BigDecimal
  volumeToken1_gte: CONCENTRATED_BigDecimal
  volumeToken1_lte: CONCENTRATED_BigDecimal
  volumeToken1_in: [CONCENTRATED_BigDecimal!]
  volumeToken1_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  feeGrowthOutside0X128: BigInt
  feeGrowthOutside0X128_not: BigInt
  feeGrowthOutside0X128_gt: BigInt
  feeGrowthOutside0X128_lt: BigInt
  feeGrowthOutside0X128_gte: BigInt
  feeGrowthOutside0X128_lte: BigInt
  feeGrowthOutside0X128_in: [BigInt!]
  feeGrowthOutside0X128_not_in: [BigInt!]
  feeGrowthOutside1X128: BigInt
  feeGrowthOutside1X128_not: BigInt
  feeGrowthOutside1X128_gt: BigInt
  feeGrowthOutside1X128_lt: BigInt
  feeGrowthOutside1X128_gte: BigInt
  feeGrowthOutside1X128_lte: BigInt
  feeGrowthOutside1X128_in: [BigInt!]
  feeGrowthOutside1X128_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_TickDayData_filter]
  or: [CONCENTRATED_TickDayData_filter]
}

enum CONCENTRATED_TickDayData_orderBy {
  id
  date
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  tick
  tick__id
  tick__poolAddress
  tick__tickIdx
  tick__liquidityGross
  tick__liquidityNet
  tick__price0
  tick__price1
  tick__volumeToken0
  tick__volumeToken1
  tick__volumeUSD
  tick__untrackedVolumeUSD
  tick__feesUSD
  tick__collectedFeesToken0
  tick__collectedFeesToken1
  tick__collectedFeesUSD
  tick__createdAtTimestamp
  tick__createdAtBlockNumber
  tick__liquidityProviderCount
  tick__feeGrowthOutside0X128
  tick__feeGrowthOutside1X128
  liquidityGross
  liquidityNet
  volumeToken0
  volumeToken1
  volumeUSD
  feesUSD
  feeGrowthOutside0X128
  feeGrowthOutside1X128
}

type CONCENTRATED_TickHourData {
  id: ID!
  periodStartUnix: Int!
  pool: CONCENTRATED_Pool!
  tick: CONCENTRATED_Tick!
  liquidityGross: BigInt!
  liquidityNet: BigInt!
  volumeToken0: CONCENTRATED_BigDecimal!
  volumeToken1: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
}

input CONCENTRATED_TickHourData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  periodStartUnix: Int
  periodStartUnix_not: Int
  periodStartUnix_gt: Int
  periodStartUnix_lt: Int
  periodStartUnix_gte: Int
  periodStartUnix_lte: Int
  periodStartUnix_in: [Int!]
  periodStartUnix_not_in: [Int!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  tick: String
  tick_not: String
  tick_gt: String
  tick_lt: String
  tick_gte: String
  tick_lte: String
  tick_in: [String!]
  tick_not_in: [String!]
  tick_contains: String
  tick_contains_nocase: String
  tick_not_contains: String
  tick_not_contains_nocase: String
  tick_starts_with: String
  tick_starts_with_nocase: String
  tick_not_starts_with: String
  tick_not_starts_with_nocase: String
  tick_ends_with: String
  tick_ends_with_nocase: String
  tick_not_ends_with: String
  tick_not_ends_with_nocase: String
  tick_: CONCENTRATED_Tick_filter
  liquidityGross: BigInt
  liquidityGross_not: BigInt
  liquidityGross_gt: BigInt
  liquidityGross_lt: BigInt
  liquidityGross_gte: BigInt
  liquidityGross_lte: BigInt
  liquidityGross_in: [BigInt!]
  liquidityGross_not_in: [BigInt!]
  liquidityNet: BigInt
  liquidityNet_not: BigInt
  liquidityNet_gt: BigInt
  liquidityNet_lt: BigInt
  liquidityNet_gte: BigInt
  liquidityNet_lte: BigInt
  liquidityNet_in: [BigInt!]
  liquidityNet_not_in: [BigInt!]
  volumeToken0: CONCENTRATED_BigDecimal
  volumeToken0_not: CONCENTRATED_BigDecimal
  volumeToken0_gt: CONCENTRATED_BigDecimal
  volumeToken0_lt: CONCENTRATED_BigDecimal
  volumeToken0_gte: CONCENTRATED_BigDecimal
  volumeToken0_lte: CONCENTRATED_BigDecimal
  volumeToken0_in: [CONCENTRATED_BigDecimal!]
  volumeToken0_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken1: CONCENTRATED_BigDecimal
  volumeToken1_not: CONCENTRATED_BigDecimal
  volumeToken1_gt: CONCENTRATED_BigDecimal
  volumeToken1_lt: CONCENTRATED_BigDecimal
  volumeToken1_gte: CONCENTRATED_BigDecimal
  volumeToken1_lte: CONCENTRATED_BigDecimal
  volumeToken1_in: [CONCENTRATED_BigDecimal!]
  volumeToken1_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_TickHourData_filter]
  or: [CONCENTRATED_TickHourData_filter]
}

enum CONCENTRATED_TickHourData_orderBy {
  id
  periodStartUnix
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  tick
  tick__id
  tick__poolAddress
  tick__tickIdx
  tick__liquidityGross
  tick__liquidityNet
  tick__price0
  tick__price1
  tick__volumeToken0
  tick__volumeToken1
  tick__volumeUSD
  tick__untrackedVolumeUSD
  tick__feesUSD
  tick__collectedFeesToken0
  tick__collectedFeesToken1
  tick__collectedFeesUSD
  tick__createdAtTimestamp
  tick__createdAtBlockNumber
  tick__liquidityProviderCount
  tick__feeGrowthOutside0X128
  tick__feeGrowthOutside1X128
  liquidityGross
  liquidityNet
  volumeToken0
  volumeToken1
  volumeUSD
  feesUSD
}

input CONCENTRATED_Tick_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  poolAddress: String
  poolAddress_not: String
  poolAddress_gt: String
  poolAddress_lt: String
  poolAddress_gte: String
  poolAddress_lte: String
  poolAddress_in: [String!]
  poolAddress_not_in: [String!]
  poolAddress_contains: String
  poolAddress_contains_nocase: String
  poolAddress_not_contains: String
  poolAddress_not_contains_nocase: String
  poolAddress_starts_with: String
  poolAddress_starts_with_nocase: String
  poolAddress_not_starts_with: String
  poolAddress_not_starts_with_nocase: String
  poolAddress_ends_with: String
  poolAddress_ends_with_nocase: String
  poolAddress_not_ends_with: String
  poolAddress_not_ends_with_nocase: String
  tickIdx: BigInt
  tickIdx_not: BigInt
  tickIdx_gt: BigInt
  tickIdx_lt: BigInt
  tickIdx_gte: BigInt
  tickIdx_lte: BigInt
  tickIdx_in: [BigInt!]
  tickIdx_not_in: [BigInt!]
  pool: String
  pool_not: String
  pool_gt: String
  pool_lt: String
  pool_gte: String
  pool_lte: String
  pool_in: [String!]
  pool_not_in: [String!]
  pool_contains: String
  pool_contains_nocase: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_: CONCENTRATED_Pool_filter
  liquidityGross: BigInt
  liquidityGross_not: BigInt
  liquidityGross_gt: BigInt
  liquidityGross_lt: BigInt
  liquidityGross_gte: BigInt
  liquidityGross_lte: BigInt
  liquidityGross_in: [BigInt!]
  liquidityGross_not_in: [BigInt!]
  liquidityNet: BigInt
  liquidityNet_not: BigInt
  liquidityNet_gt: BigInt
  liquidityNet_lt: BigInt
  liquidityNet_gte: BigInt
  liquidityNet_lte: BigInt
  liquidityNet_in: [BigInt!]
  liquidityNet_not_in: [BigInt!]
  price0: CONCENTRATED_BigDecimal
  price0_not: CONCENTRATED_BigDecimal
  price0_gt: CONCENTRATED_BigDecimal
  price0_lt: CONCENTRATED_BigDecimal
  price0_gte: CONCENTRATED_BigDecimal
  price0_lte: CONCENTRATED_BigDecimal
  price0_in: [CONCENTRATED_BigDecimal!]
  price0_not_in: [CONCENTRATED_BigDecimal!]
  price1: CONCENTRATED_BigDecimal
  price1_not: CONCENTRATED_BigDecimal
  price1_gt: CONCENTRATED_BigDecimal
  price1_lt: CONCENTRATED_BigDecimal
  price1_gte: CONCENTRATED_BigDecimal
  price1_lte: CONCENTRATED_BigDecimal
  price1_in: [CONCENTRATED_BigDecimal!]
  price1_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken0: CONCENTRATED_BigDecimal
  volumeToken0_not: CONCENTRATED_BigDecimal
  volumeToken0_gt: CONCENTRATED_BigDecimal
  volumeToken0_lt: CONCENTRATED_BigDecimal
  volumeToken0_gte: CONCENTRATED_BigDecimal
  volumeToken0_lte: CONCENTRATED_BigDecimal
  volumeToken0_in: [CONCENTRATED_BigDecimal!]
  volumeToken0_not_in: [CONCENTRATED_BigDecimal!]
  volumeToken1: CONCENTRATED_BigDecimal
  volumeToken1_not: CONCENTRATED_BigDecimal
  volumeToken1_gt: CONCENTRATED_BigDecimal
  volumeToken1_lt: CONCENTRATED_BigDecimal
  volumeToken1_gte: CONCENTRATED_BigDecimal
  volumeToken1_lte: CONCENTRATED_BigDecimal
  volumeToken1_in: [CONCENTRATED_BigDecimal!]
  volumeToken1_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_not: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken0: CONCENTRATED_BigDecimal
  collectedFeesToken0_not: CONCENTRATED_BigDecimal
  collectedFeesToken0_gt: CONCENTRATED_BigDecimal
  collectedFeesToken0_lt: CONCENTRATED_BigDecimal
  collectedFeesToken0_gte: CONCENTRATED_BigDecimal
  collectedFeesToken0_lte: CONCENTRATED_BigDecimal
  collectedFeesToken0_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken0_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken1: CONCENTRATED_BigDecimal
  collectedFeesToken1_not: CONCENTRATED_BigDecimal
  collectedFeesToken1_gt: CONCENTRATED_BigDecimal
  collectedFeesToken1_lt: CONCENTRATED_BigDecimal
  collectedFeesToken1_gte: CONCENTRATED_BigDecimal
  collectedFeesToken1_lte: CONCENTRATED_BigDecimal
  collectedFeesToken1_in: [CONCENTRATED_BigDecimal!]
  collectedFeesToken1_not_in: [CONCENTRATED_BigDecimal!]
  collectedFeesUSD: CONCENTRATED_BigDecimal
  collectedFeesUSD_not: CONCENTRATED_BigDecimal
  collectedFeesUSD_gt: CONCENTRATED_BigDecimal
  collectedFeesUSD_lt: CONCENTRATED_BigDecimal
  collectedFeesUSD_gte: CONCENTRATED_BigDecimal
  collectedFeesUSD_lte: CONCENTRATED_BigDecimal
  collectedFeesUSD_in: [CONCENTRATED_BigDecimal!]
  collectedFeesUSD_not_in: [CONCENTRATED_BigDecimal!]
  createdAtTimestamp: BigInt
  createdAtTimestamp_not: BigInt
  createdAtTimestamp_gt: BigInt
  createdAtTimestamp_lt: BigInt
  createdAtTimestamp_gte: BigInt
  createdAtTimestamp_lte: BigInt
  createdAtTimestamp_in: [BigInt!]
  createdAtTimestamp_not_in: [BigInt!]
  createdAtBlockNumber: BigInt
  createdAtBlockNumber_not: BigInt
  createdAtBlockNumber_gt: BigInt
  createdAtBlockNumber_lt: BigInt
  createdAtBlockNumber_gte: BigInt
  createdAtBlockNumber_lte: BigInt
  createdAtBlockNumber_in: [BigInt!]
  createdAtBlockNumber_not_in: [BigInt!]
  liquidityProviderCount: BigInt
  liquidityProviderCount_not: BigInt
  liquidityProviderCount_gt: BigInt
  liquidityProviderCount_lt: BigInt
  liquidityProviderCount_gte: BigInt
  liquidityProviderCount_lte: BigInt
  liquidityProviderCount_in: [BigInt!]
  liquidityProviderCount_not_in: [BigInt!]
  feeGrowthOutside0X128: BigInt
  feeGrowthOutside0X128_not: BigInt
  feeGrowthOutside0X128_gt: BigInt
  feeGrowthOutside0X128_lt: BigInt
  feeGrowthOutside0X128_gte: BigInt
  feeGrowthOutside0X128_lte: BigInt
  feeGrowthOutside0X128_in: [BigInt!]
  feeGrowthOutside0X128_not_in: [BigInt!]
  feeGrowthOutside1X128: BigInt
  feeGrowthOutside1X128_not: BigInt
  feeGrowthOutside1X128_gt: BigInt
  feeGrowthOutside1X128_lt: BigInt
  feeGrowthOutside1X128_gte: BigInt
  feeGrowthOutside1X128_lte: BigInt
  feeGrowthOutside1X128_in: [BigInt!]
  feeGrowthOutside1X128_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Tick_filter]
  or: [CONCENTRATED_Tick_filter]
}

enum CONCENTRATED_Tick_orderBy {
  id
  poolAddress
  tickIdx
  pool
  pool__id
  pool__createdAtTimestamp
  pool__createdAtBlockNumber
  pool__feeTier
  pool__liquidity
  pool__sqrtPrice
  pool__feeGrowthGlobal0X128
  pool__feeGrowthGlobal1X128
  pool__token0Price
  pool__token1Price
  pool__tick
  pool__observationIndex
  pool__volumeToken0
  pool__volumeToken1
  pool__volumeUSD
  pool__untrackedVolumeUSD
  pool__feesUSD
  pool__txCount
  pool__collectedFeesToken0
  pool__collectedFeesToken1
  pool__collectedFeesUSD
  pool__totalValueLockedToken0
  pool__totalValueLockedToken1
  pool__totalValueLockedETH
  pool__totalValueLockedUSD
  pool__totalValueLockedUSDUntracked
  pool__liquidityProviderCount
  liquidityGross
  liquidityNet
  price0
  price1
  volumeToken0
  volumeToken1
  volumeUSD
  untrackedVolumeUSD
  feesUSD
  collectedFeesToken0
  collectedFeesToken1
  collectedFeesUSD
  createdAtTimestamp
  createdAtBlockNumber
  liquidityProviderCount
  feeGrowthOutside0X128
  feeGrowthOutside1X128
}

"""
A string representation of microseconds UNIX timestamp (16 digits)

"""
scalar Timestamp

type CONCENTRATED_Token {
  id: ID!
  symbol: String!
  name: String!
  decimals: BigInt!
  totalSupply: BigInt!
  volume: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  untrackedVolumeUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  txCount: BigInt!
  poolCount: BigInt!
  totalValueLocked: CONCENTRATED_BigDecimal!
  totalValueLockedUSD: CONCENTRATED_BigDecimal!
  totalValueLockedUSDUntracked: CONCENTRATED_BigDecimal!
  derivedETH: CONCENTRATED_BigDecimal!
  whitelistPools(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Pool_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Pool_filter): [CONCENTRATED_Pool!]!
  tokenDayData(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_TokenDayData_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_TokenDayData_filter): [CONCENTRATED_TokenDayData!]!
}

type CONCENTRATED_TokenDayData {
  id: ID!
  date: Int!
  token: CONCENTRATED_Token!
  volume: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  untrackedVolumeUSD: CONCENTRATED_BigDecimal!
  totalValueLocked: CONCENTRATED_BigDecimal!
  totalValueLockedUSD: CONCENTRATED_BigDecimal!
  priceUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  open: CONCENTRATED_BigDecimal!
  high: CONCENTRATED_BigDecimal!
  low: CONCENTRATED_BigDecimal!
  close: CONCENTRATED_BigDecimal!
}

input CONCENTRATED_TokenDayData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  date: Int
  date_not: Int
  date_gt: Int
  date_lt: Int
  date_gte: Int
  date_lte: Int
  date_in: [Int!]
  date_not_in: [Int!]
  token: String
  token_not: String
  token_gt: String
  token_lt: String
  token_gte: String
  token_lte: String
  token_in: [String!]
  token_not_in: [String!]
  token_contains: String
  token_contains_nocase: String
  token_not_contains: String
  token_not_contains_nocase: String
  token_starts_with: String
  token_starts_with_nocase: String
  token_not_starts_with: String
  token_not_starts_with_nocase: String
  token_ends_with: String
  token_ends_with_nocase: String
  token_not_ends_with: String
  token_not_ends_with_nocase: String
  token_: CONCENTRATED_Token_filter
  volume: CONCENTRATED_BigDecimal
  volume_not: CONCENTRATED_BigDecimal
  volume_gt: CONCENTRATED_BigDecimal
  volume_lt: CONCENTRATED_BigDecimal
  volume_gte: CONCENTRATED_BigDecimal
  volume_lte: CONCENTRATED_BigDecimal
  volume_in: [CONCENTRATED_BigDecimal!]
  volume_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_not: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLocked: CONCENTRATED_BigDecimal
  totalValueLocked_not: CONCENTRATED_BigDecimal
  totalValueLocked_gt: CONCENTRATED_BigDecimal
  totalValueLocked_lt: CONCENTRATED_BigDecimal
  totalValueLocked_gte: CONCENTRATED_BigDecimal
  totalValueLocked_lte: CONCENTRATED_BigDecimal
  totalValueLocked_in: [CONCENTRATED_BigDecimal!]
  totalValueLocked_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD: CONCENTRATED_BigDecimal
  totalValueLockedUSD_not: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD_not_in: [CONCENTRATED_BigDecimal!]
  priceUSD: CONCENTRATED_BigDecimal
  priceUSD_not: CONCENTRATED_BigDecimal
  priceUSD_gt: CONCENTRATED_BigDecimal
  priceUSD_lt: CONCENTRATED_BigDecimal
  priceUSD_gte: CONCENTRATED_BigDecimal
  priceUSD_lte: CONCENTRATED_BigDecimal
  priceUSD_in: [CONCENTRATED_BigDecimal!]
  priceUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  open: CONCENTRATED_BigDecimal
  open_not: CONCENTRATED_BigDecimal
  open_gt: CONCENTRATED_BigDecimal
  open_lt: CONCENTRATED_BigDecimal
  open_gte: CONCENTRATED_BigDecimal
  open_lte: CONCENTRATED_BigDecimal
  open_in: [CONCENTRATED_BigDecimal!]
  open_not_in: [CONCENTRATED_BigDecimal!]
  high: CONCENTRATED_BigDecimal
  high_not: CONCENTRATED_BigDecimal
  high_gt: CONCENTRATED_BigDecimal
  high_lt: CONCENTRATED_BigDecimal
  high_gte: CONCENTRATED_BigDecimal
  high_lte: CONCENTRATED_BigDecimal
  high_in: [CONCENTRATED_BigDecimal!]
  high_not_in: [CONCENTRATED_BigDecimal!]
  low: CONCENTRATED_BigDecimal
  low_not: CONCENTRATED_BigDecimal
  low_gt: CONCENTRATED_BigDecimal
  low_lt: CONCENTRATED_BigDecimal
  low_gte: CONCENTRATED_BigDecimal
  low_lte: CONCENTRATED_BigDecimal
  low_in: [CONCENTRATED_BigDecimal!]
  low_not_in: [CONCENTRATED_BigDecimal!]
  close: CONCENTRATED_BigDecimal
  close_not: CONCENTRATED_BigDecimal
  close_gt: CONCENTRATED_BigDecimal
  close_lt: CONCENTRATED_BigDecimal
  close_gte: CONCENTRATED_BigDecimal
  close_lte: CONCENTRATED_BigDecimal
  close_in: [CONCENTRATED_BigDecimal!]
  close_not_in: [CONCENTRATED_BigDecimal!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_TokenDayData_filter]
  or: [CONCENTRATED_TokenDayData_filter]
}

enum CONCENTRATED_TokenDayData_orderBy {
  id
  date
  token
  token__id
  token__symbol
  token__name
  token__decimals
  token__totalSupply
  token__volume
  token__volumeUSD
  token__untrackedVolumeUSD
  token__feesUSD
  token__txCount
  token__poolCount
  token__totalValueLocked
  token__totalValueLockedUSD
  token__totalValueLockedUSDUntracked
  token__derivedETH
  volume
  volumeUSD
  untrackedVolumeUSD
  totalValueLocked
  totalValueLockedUSD
  priceUSD
  feesUSD
  open
  high
  low
  close
}

type CONCENTRATED_TokenHourData {
  id: ID!
  periodStartUnix: Int!
  token: CONCENTRATED_Token!
  volume: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  untrackedVolumeUSD: CONCENTRATED_BigDecimal!
  totalValueLocked: CONCENTRATED_BigDecimal!
  totalValueLockedUSD: CONCENTRATED_BigDecimal!
  priceUSD: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  open: CONCENTRATED_BigDecimal!
  high: CONCENTRATED_BigDecimal!
  low: CONCENTRATED_BigDecimal!
  close: CONCENTRATED_BigDecimal!
}

input CONCENTRATED_TokenHourData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  periodStartUnix: Int
  periodStartUnix_not: Int
  periodStartUnix_gt: Int
  periodStartUnix_lt: Int
  periodStartUnix_gte: Int
  periodStartUnix_lte: Int
  periodStartUnix_in: [Int!]
  periodStartUnix_not_in: [Int!]
  token: String
  token_not: String
  token_gt: String
  token_lt: String
  token_gte: String
  token_lte: String
  token_in: [String!]
  token_not_in: [String!]
  token_contains: String
  token_contains_nocase: String
  token_not_contains: String
  token_not_contains_nocase: String
  token_starts_with: String
  token_starts_with_nocase: String
  token_not_starts_with: String
  token_not_starts_with_nocase: String
  token_ends_with: String
  token_ends_with_nocase: String
  token_not_ends_with: String
  token_not_ends_with_nocase: String
  token_: CONCENTRATED_Token_filter
  volume: CONCENTRATED_BigDecimal
  volume_not: CONCENTRATED_BigDecimal
  volume_gt: CONCENTRATED_BigDecimal
  volume_lt: CONCENTRATED_BigDecimal
  volume_gte: CONCENTRATED_BigDecimal
  volume_lte: CONCENTRATED_BigDecimal
  volume_in: [CONCENTRATED_BigDecimal!]
  volume_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_not: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLocked: CONCENTRATED_BigDecimal
  totalValueLocked_not: CONCENTRATED_BigDecimal
  totalValueLocked_gt: CONCENTRATED_BigDecimal
  totalValueLocked_lt: CONCENTRATED_BigDecimal
  totalValueLocked_gte: CONCENTRATED_BigDecimal
  totalValueLocked_lte: CONCENTRATED_BigDecimal
  totalValueLocked_in: [CONCENTRATED_BigDecimal!]
  totalValueLocked_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD: CONCENTRATED_BigDecimal
  totalValueLockedUSD_not: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD_not_in: [CONCENTRATED_BigDecimal!]
  priceUSD: CONCENTRATED_BigDecimal
  priceUSD_not: CONCENTRATED_BigDecimal
  priceUSD_gt: CONCENTRATED_BigDecimal
  priceUSD_lt: CONCENTRATED_BigDecimal
  priceUSD_gte: CONCENTRATED_BigDecimal
  priceUSD_lte: CONCENTRATED_BigDecimal
  priceUSD_in: [CONCENTRATED_BigDecimal!]
  priceUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  open: CONCENTRATED_BigDecimal
  open_not: CONCENTRATED_BigDecimal
  open_gt: CONCENTRATED_BigDecimal
  open_lt: CONCENTRATED_BigDecimal
  open_gte: CONCENTRATED_BigDecimal
  open_lte: CONCENTRATED_BigDecimal
  open_in: [CONCENTRATED_BigDecimal!]
  open_not_in: [CONCENTRATED_BigDecimal!]
  high: CONCENTRATED_BigDecimal
  high_not: CONCENTRATED_BigDecimal
  high_gt: CONCENTRATED_BigDecimal
  high_lt: CONCENTRATED_BigDecimal
  high_gte: CONCENTRATED_BigDecimal
  high_lte: CONCENTRATED_BigDecimal
  high_in: [CONCENTRATED_BigDecimal!]
  high_not_in: [CONCENTRATED_BigDecimal!]
  low: CONCENTRATED_BigDecimal
  low_not: CONCENTRATED_BigDecimal
  low_gt: CONCENTRATED_BigDecimal
  low_lt: CONCENTRATED_BigDecimal
  low_gte: CONCENTRATED_BigDecimal
  low_lte: CONCENTRATED_BigDecimal
  low_in: [CONCENTRATED_BigDecimal!]
  low_not_in: [CONCENTRATED_BigDecimal!]
  close: CONCENTRATED_BigDecimal
  close_not: CONCENTRATED_BigDecimal
  close_gt: CONCENTRATED_BigDecimal
  close_lt: CONCENTRATED_BigDecimal
  close_gte: CONCENTRATED_BigDecimal
  close_lte: CONCENTRATED_BigDecimal
  close_in: [CONCENTRATED_BigDecimal!]
  close_not_in: [CONCENTRATED_BigDecimal!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_TokenHourData_filter]
  or: [CONCENTRATED_TokenHourData_filter]
}

enum CONCENTRATED_TokenHourData_orderBy {
  id
  periodStartUnix
  token
  token__id
  token__symbol
  token__name
  token__decimals
  token__totalSupply
  token__volume
  token__volumeUSD
  token__untrackedVolumeUSD
  token__feesUSD
  token__txCount
  token__poolCount
  token__totalValueLocked
  token__totalValueLockedUSD
  token__totalValueLockedUSDUntracked
  token__derivedETH
  volume
  volumeUSD
  untrackedVolumeUSD
  totalValueLocked
  totalValueLockedUSD
  priceUSD
  feesUSD
  open
  high
  low
  close
}

input CONCENTRATED_Token_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  symbol: String
  symbol_not: String
  symbol_gt: String
  symbol_lt: String
  symbol_gte: String
  symbol_lte: String
  symbol_in: [String!]
  symbol_not_in: [String!]
  symbol_contains: String
  symbol_contains_nocase: String
  symbol_not_contains: String
  symbol_not_contains_nocase: String
  symbol_starts_with: String
  symbol_starts_with_nocase: String
  symbol_not_starts_with: String
  symbol_not_starts_with_nocase: String
  symbol_ends_with: String
  symbol_ends_with_nocase: String
  symbol_not_ends_with: String
  symbol_not_ends_with_nocase: String
  name: String
  name_not: String
  name_gt: String
  name_lt: String
  name_gte: String
  name_lte: String
  name_in: [String!]
  name_not_in: [String!]
  name_contains: String
  name_contains_nocase: String
  name_not_contains: String
  name_not_contains_nocase: String
  name_starts_with: String
  name_starts_with_nocase: String
  name_not_starts_with: String
  name_not_starts_with_nocase: String
  name_ends_with: String
  name_ends_with_nocase: String
  name_not_ends_with: String
  name_not_ends_with_nocase: String
  decimals: BigInt
  decimals_not: BigInt
  decimals_gt: BigInt
  decimals_lt: BigInt
  decimals_gte: BigInt
  decimals_lte: BigInt
  decimals_in: [BigInt!]
  decimals_not_in: [BigInt!]
  totalSupply: BigInt
  totalSupply_not: BigInt
  totalSupply_gt: BigInt
  totalSupply_lt: BigInt
  totalSupply_gte: BigInt
  totalSupply_lte: BigInt
  totalSupply_in: [BigInt!]
  totalSupply_not_in: [BigInt!]
  volume: CONCENTRATED_BigDecimal
  volume_not: CONCENTRATED_BigDecimal
  volume_gt: CONCENTRATED_BigDecimal
  volume_lt: CONCENTRATED_BigDecimal
  volume_gte: CONCENTRATED_BigDecimal
  volume_lte: CONCENTRATED_BigDecimal
  volume_in: [CONCENTRATED_BigDecimal!]
  volume_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_not: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lt: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_gte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_lte: CONCENTRATED_BigDecimal
  untrackedVolumeUSD_in: [CONCENTRATED_BigDecimal!]
  untrackedVolumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  txCount: BigInt
  txCount_not: BigInt
  txCount_gt: BigInt
  txCount_lt: BigInt
  txCount_gte: BigInt
  txCount_lte: BigInt
  txCount_in: [BigInt!]
  txCount_not_in: [BigInt!]
  poolCount: BigInt
  poolCount_not: BigInt
  poolCount_gt: BigInt
  poolCount_lt: BigInt
  poolCount_gte: BigInt
  poolCount_lte: BigInt
  poolCount_in: [BigInt!]
  poolCount_not_in: [BigInt!]
  totalValueLocked: CONCENTRATED_BigDecimal
  totalValueLocked_not: CONCENTRATED_BigDecimal
  totalValueLocked_gt: CONCENTRATED_BigDecimal
  totalValueLocked_lt: CONCENTRATED_BigDecimal
  totalValueLocked_gte: CONCENTRATED_BigDecimal
  totalValueLocked_lte: CONCENTRATED_BigDecimal
  totalValueLocked_in: [CONCENTRATED_BigDecimal!]
  totalValueLocked_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD: CONCENTRATED_BigDecimal
  totalValueLockedUSD_not: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lt: CONCENTRATED_BigDecimal
  totalValueLockedUSD_gte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_lte: CONCENTRATED_BigDecimal
  totalValueLockedUSD_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSD_not_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSDUntracked: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_not: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_gt: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_lt: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_gte: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_lte: CONCENTRATED_BigDecimal
  totalValueLockedUSDUntracked_in: [CONCENTRATED_BigDecimal!]
  totalValueLockedUSDUntracked_not_in: [CONCENTRATED_BigDecimal!]
  derivedETH: CONCENTRATED_BigDecimal
  derivedETH_not: CONCENTRATED_BigDecimal
  derivedETH_gt: CONCENTRATED_BigDecimal
  derivedETH_lt: CONCENTRATED_BigDecimal
  derivedETH_gte: CONCENTRATED_BigDecimal
  derivedETH_lte: CONCENTRATED_BigDecimal
  derivedETH_in: [CONCENTRATED_BigDecimal!]
  derivedETH_not_in: [CONCENTRATED_BigDecimal!]
  whitelistPools: [String!]
  whitelistPools_not: [String!]
  whitelistPools_contains: [String!]
  whitelistPools_contains_nocase: [String!]
  whitelistPools_not_contains: [String!]
  whitelistPools_not_contains_nocase: [String!]
  whitelistPools_: CONCENTRATED_Pool_filter
  tokenDayData_: CONCENTRATED_TokenDayData_filter
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Token_filter]
  or: [CONCENTRATED_Token_filter]
}

enum CONCENTRATED_Token_orderBy {
  id
  symbol
  name
  decimals
  totalSupply
  volume
  volumeUSD
  untrackedVolumeUSD
  feesUSD
  txCount
  poolCount
  totalValueLocked
  totalValueLockedUSD
  totalValueLockedUSDUntracked
  derivedETH
  whitelistPools
  tokenDayData
}

type CONCENTRATED_Transaction {
  id: ID!
  blockNumber: BigInt!
  timestamp: BigInt!
  gasUsed: BigInt!
  gasPrice: BigInt!
  mints(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Mint_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Mint_filter): [CONCENTRATED_Mint]!
  burns(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Burn_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Burn_filter): [CONCENTRATED_Burn]!
  swaps(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Swap_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Swap_filter): [CONCENTRATED_Swap]!
  flashed(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Flash_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Flash_filter): [CONCENTRATED_Flash]!
  collects(skip: Int = 0, first: Int = 100, orderBy: CONCENTRATED_Collect_orderBy, orderDirection: CONCENTRATED_OrderDirection, where: CONCENTRATED_Collect_filter): [CONCENTRATED_Collect]!
}

input CONCENTRATED_Transaction_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  mints_: CONCENTRATED_Mint_filter
  burns_: CONCENTRATED_Burn_filter
  swaps_: CONCENTRATED_Swap_filter
  flashed_: CONCENTRATED_Flash_filter
  collects_: CONCENTRATED_Collect_filter
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_Transaction_filter]
  or: [CONCENTRATED_Transaction_filter]
}

enum CONCENTRATED_Transaction_orderBy {
  id
  blockNumber
  timestamp
  gasUsed
  gasPrice
  mints
  burns
  swaps
  flashed
  collects
}

type CONCENTRATED_UniswapDayData {
  id: ID!
  date: Int!
  volumeETH: CONCENTRATED_BigDecimal!
  volumeUSD: CONCENTRATED_BigDecimal!
  volumeUSDUntracked: CONCENTRATED_BigDecimal!
  feesUSD: CONCENTRATED_BigDecimal!
  txCount: BigInt!
  tvlUSD: CONCENTRATED_BigDecimal!
}

input CONCENTRATED_UniswapDayData_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  date: Int
  date_not: Int
  date_gt: Int
  date_lt: Int
  date_gte: Int
  date_lte: Int
  date_in: [Int!]
  date_not_in: [Int!]
  volumeETH: CONCENTRATED_BigDecimal
  volumeETH_not: CONCENTRATED_BigDecimal
  volumeETH_gt: CONCENTRATED_BigDecimal
  volumeETH_lt: CONCENTRATED_BigDecimal
  volumeETH_gte: CONCENTRATED_BigDecimal
  volumeETH_lte: CONCENTRATED_BigDecimal
  volumeETH_in: [CONCENTRATED_BigDecimal!]
  volumeETH_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSD: CONCENTRATED_BigDecimal
  volumeUSD_not: CONCENTRATED_BigDecimal
  volumeUSD_gt: CONCENTRATED_BigDecimal
  volumeUSD_lt: CONCENTRATED_BigDecimal
  volumeUSD_gte: CONCENTRATED_BigDecimal
  volumeUSD_lte: CONCENTRATED_BigDecimal
  volumeUSD_in: [CONCENTRATED_BigDecimal!]
  volumeUSD_not_in: [CONCENTRATED_BigDecimal!]
  volumeUSDUntracked: CONCENTRATED_BigDecimal
  volumeUSDUntracked_not: CONCENTRATED_BigDecimal
  volumeUSDUntracked_gt: CONCENTRATED_BigDecimal
  volumeUSDUntracked_lt: CONCENTRATED_BigDecimal
  volumeUSDUntracked_gte: CONCENTRATED_BigDecimal
  volumeUSDUntracked_lte: CONCENTRATED_BigDecimal
  volumeUSDUntracked_in: [CONCENTRATED_BigDecimal!]
  volumeUSDUntracked_not_in: [CONCENTRATED_BigDecimal!]
  feesUSD: CONCENTRATED_BigDecimal
  feesUSD_not: CONCENTRATED_BigDecimal
  feesUSD_gt: CONCENTRATED_BigDecimal
  feesUSD_lt: CONCENTRATED_BigDecimal
  feesUSD_gte: CONCENTRATED_BigDecimal
  feesUSD_lte: CONCENTRATED_BigDecimal
  feesUSD_in: [CONCENTRATED_BigDecimal!]
  feesUSD_not_in: [CONCENTRATED_BigDecimal!]
  txCount: BigInt
  txCount_not: BigInt
  txCount_gt: BigInt
  txCount_lt: BigInt
  txCount_gte: BigInt
  txCount_lte: BigInt
  txCount_in: [BigInt!]
  txCount_not_in: [BigInt!]
  tvlUSD: CONCENTRATED_BigDecimal
  tvlUSD_not: CONCENTRATED_BigDecimal
  tvlUSD_gt: CONCENTRATED_BigDecimal
  tvlUSD_lt: CONCENTRATED_BigDecimal
  tvlUSD_gte: CONCENTRATED_BigDecimal
  tvlUSD_lte: CONCENTRATED_BigDecimal
  tvlUSD_in: [CONCENTRATED_BigDecimal!]
  tvlUSD_not_in: [CONCENTRATED_BigDecimal!]
  """Filter for the block changed event."""
  _change_block: CONCENTRATED_BlockChangedFilter
  and: [CONCENTRATED_UniswapDayData_filter]
  or: [CONCENTRATED_UniswapDayData_filter]
}

enum CONCENTRATED_UniswapDayData_orderBy {
  id
  date
  volumeETH
  volumeUSD
  volumeUSDUntracked
  feesUSD
  txCount
  tvlUSD
}

type CONCENTRATED__Block_ {
  """The hash of the block"""
  hash: CONCENTRATED_Bytes
  """The block number"""
  number: Int!
  """Integer representation of the timestamp stored in blocks for the chain"""
  timestamp: Int
  """The hash of the parent block"""
  parentHash: CONCENTRATED_Bytes
}

"""The type for the top-level _meta field"""
type CONCENTRATED__Meta_ {
  """
  Information about a specific subgraph block. The hash of the block
  will be null if the _meta field has a block constraint that asks for
  a block number. It will be filled if the _meta field has no block constraint
  and therefore asks for the latest  block
  
  """
  block: CONCENTRATED__Block_!
  """The deployment ID"""
  deployment: String!
  """If `true`, the subgraph encountered indexing errors at some past block"""
  hasIndexingErrors: Boolean!
}

enum _SubgraphErrorPolicy_ {
  """Data will be returned even if the subgraph has indexing errors"""
  allow
  """
  If the subgraph has indexing errors, data will be omitted. The default.
  """
  deny
}